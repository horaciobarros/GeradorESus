/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.pec.transport.generated.thrift.esuspecatendimentotransport;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ESUSPECAtendimentoThrift implements org.apache.thrift.TBase<ESUSPECAtendimentoThrift, ESUSPECAtendimentoThrift._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ESUSPECAtendimentoThrift");

  private static final org.apache.thrift.protocol.TField CNS_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cnsCidadao", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CPF_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfCidadao", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DT_NASCIMENTO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dtNascimentoCidadao", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FICHA_ATENDIMENTO_INDIVIDUAL_FIELD_DESC = new org.apache.thrift.protocol.TField("fichaAtendimentoIndividual", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField FICHA_PROCEDIMENTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("fichaProcedimentos", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField HEADER_FIELD_DESC = new org.apache.thrift.protocol.TField("header", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField IBGE_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("ibgeNascimento", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField NOME_MAE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMaeCidadao", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField UUID_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidAtendimento", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UUID_ATENDIMENTO_PROFISSIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidAtendimentoProfissional", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ESUSPECAtendimentoThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ESUSPECAtendimentoThriftTupleSchemeFactory());
  }

  private String cnsCidadao; // optional
  private String cpfCidadao; // optional
  private long dtNascimentoCidadao; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift fichaAtendimentoIndividual; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift fichaProcedimentos; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift header; // optional
  private String ibgeNascimento; // optional
  private String nomeMaeCidadao; // optional
  private String uuidAtendimento; // optional
  private String uuidAtendimentoProfissional; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CNS_CIDADAO((short)1, "cnsCidadao"),
    CPF_CIDADAO((short)2, "cpfCidadao"),
    DT_NASCIMENTO_CIDADAO((short)3, "dtNascimentoCidadao"),
    FICHA_ATENDIMENTO_INDIVIDUAL((short)4, "fichaAtendimentoIndividual"),
    FICHA_PROCEDIMENTOS((short)5, "fichaProcedimentos"),
    HEADER((short)6, "header"),
    IBGE_NASCIMENTO((short)7, "ibgeNascimento"),
    NOME_MAE_CIDADAO((short)8, "nomeMaeCidadao"),
    UUID_ATENDIMENTO((short)9, "uuidAtendimento"),
    UUID_ATENDIMENTO_PROFISSIONAL((short)10, "uuidAtendimentoProfissional");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CNS_CIDADAO
          return CNS_CIDADAO;
        case 2: // CPF_CIDADAO
          return CPF_CIDADAO;
        case 3: // DT_NASCIMENTO_CIDADAO
          return DT_NASCIMENTO_CIDADAO;
        case 4: // FICHA_ATENDIMENTO_INDIVIDUAL
          return FICHA_ATENDIMENTO_INDIVIDUAL;
        case 5: // FICHA_PROCEDIMENTOS
          return FICHA_PROCEDIMENTOS;
        case 6: // HEADER
          return HEADER;
        case 7: // IBGE_NASCIMENTO
          return IBGE_NASCIMENTO;
        case 8: // NOME_MAE_CIDADAO
          return NOME_MAE_CIDADAO;
        case 9: // UUID_ATENDIMENTO
          return UUID_ATENDIMENTO;
        case 10: // UUID_ATENDIMENTO_PROFISSIONAL
          return UUID_ATENDIMENTO_PROFISSIONAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DTNASCIMENTOCIDADAO_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.CNS_CIDADAO,_Fields.CPF_CIDADAO,_Fields.DT_NASCIMENTO_CIDADAO,_Fields.FICHA_ATENDIMENTO_INDIVIDUAL,_Fields.FICHA_PROCEDIMENTOS,_Fields.HEADER,_Fields.IBGE_NASCIMENTO,_Fields.NOME_MAE_CIDADAO,_Fields.UUID_ATENDIMENTO,_Fields.UUID_ATENDIMENTO_PROFISSIONAL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CNS_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cnsCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cpfCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_NASCIMENTO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("dtNascimentoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FICHA_ATENDIMENTO_INDIVIDUAL, new org.apache.thrift.meta_data.FieldMetaData("fichaAtendimentoIndividual", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift.class)));
    tmpMap.put(_Fields.FICHA_PROCEDIMENTOS, new org.apache.thrift.meta_data.FieldMetaData("fichaProcedimentos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift.class)));
    tmpMap.put(_Fields.HEADER, new org.apache.thrift.meta_data.FieldMetaData("header", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.IBGE_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("ibgeNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_MAE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeMaeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("uuidAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_ATENDIMENTO_PROFISSIONAL, new org.apache.thrift.meta_data.FieldMetaData("uuidAtendimentoProfissional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ESUSPECAtendimentoThrift.class, metaDataMap);
  }

  public ESUSPECAtendimentoThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ESUSPECAtendimentoThrift(ESUSPECAtendimentoThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCnsCidadao()) {
      this.cnsCidadao = other.cnsCidadao;
    }
    if (other.isSetCpfCidadao()) {
      this.cpfCidadao = other.cpfCidadao;
    }
    this.dtNascimentoCidadao = other.dtNascimentoCidadao;
    if (other.isSetFichaAtendimentoIndividual()) {
      this.fichaAtendimentoIndividual = new br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift(other.fichaAtendimentoIndividual);
    }
    if (other.isSetFichaProcedimentos()) {
      this.fichaProcedimentos = new br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift(other.fichaProcedimentos);
    }
    if (other.isSetHeader()) {
      this.header = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift(other.header);
    }
    if (other.isSetIbgeNascimento()) {
      this.ibgeNascimento = other.ibgeNascimento;
    }
    if (other.isSetNomeMaeCidadao()) {
      this.nomeMaeCidadao = other.nomeMaeCidadao;
    }
    if (other.isSetUuidAtendimento()) {
      this.uuidAtendimento = other.uuidAtendimento;
    }
    if (other.isSetUuidAtendimentoProfissional()) {
      this.uuidAtendimentoProfissional = other.uuidAtendimentoProfissional;
    }
  }

  public ESUSPECAtendimentoThrift deepCopy() {
    return new ESUSPECAtendimentoThrift(this);
  }

  @Override
  public void clear() {
    this.cnsCidadao = null;
    this.cpfCidadao = null;
    setDtNascimentoCidadaoIsSet(false);
    this.dtNascimentoCidadao = 0;
    this.fichaAtendimentoIndividual = null;
    this.fichaProcedimentos = null;
    this.header = null;
    this.ibgeNascimento = null;
    this.nomeMaeCidadao = null;
    this.uuidAtendimento = null;
    this.uuidAtendimentoProfissional = null;
  }

  public String getCnsCidadao() {
    return this.cnsCidadao;
  }

  public void setCnsCidadao(String cnsCidadao) {
    this.cnsCidadao = cnsCidadao;
  }

  public void unsetCnsCidadao() {
    this.cnsCidadao = null;
  }

  /** Returns true if field cnsCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCnsCidadao() {
    return this.cnsCidadao != null;
  }

  public void setCnsCidadaoIsSet(boolean value) {
    if (!value) {
      this.cnsCidadao = null;
    }
  }

  public String getCpfCidadao() {
    return this.cpfCidadao;
  }

  public void setCpfCidadao(String cpfCidadao) {
    this.cpfCidadao = cpfCidadao;
  }

  public void unsetCpfCidadao() {
    this.cpfCidadao = null;
  }

  /** Returns true if field cpfCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfCidadao() {
    return this.cpfCidadao != null;
  }

  public void setCpfCidadaoIsSet(boolean value) {
    if (!value) {
      this.cpfCidadao = null;
    }
  }

  public long getDtNascimentoCidadao() {
    return this.dtNascimentoCidadao;
  }

  public void setDtNascimentoCidadao(long dtNascimentoCidadao) {
    this.dtNascimentoCidadao = dtNascimentoCidadao;
    setDtNascimentoCidadaoIsSet(true);
  }

  public void unsetDtNascimentoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTNASCIMENTOCIDADAO_ISSET_ID);
  }

  /** Returns true if field dtNascimentoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDtNascimentoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __DTNASCIMENTOCIDADAO_ISSET_ID);
  }

  public void setDtNascimentoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTNASCIMENTOCIDADAO_ISSET_ID, value);
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift getFichaAtendimentoIndividual() {
    return this.fichaAtendimentoIndividual;
  }

  public void setFichaAtendimentoIndividual(br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift fichaAtendimentoIndividual) {
    this.fichaAtendimentoIndividual = fichaAtendimentoIndividual;
  }

  public void unsetFichaAtendimentoIndividual() {
    this.fichaAtendimentoIndividual = null;
  }

  /** Returns true if field fichaAtendimentoIndividual is set (has been assigned a value) and false otherwise */
  public boolean isSetFichaAtendimentoIndividual() {
    return this.fichaAtendimentoIndividual != null;
  }

  public void setFichaAtendimentoIndividualIsSet(boolean value) {
    if (!value) {
      this.fichaAtendimentoIndividual = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift getFichaProcedimentos() {
    return this.fichaProcedimentos;
  }

  public void setFichaProcedimentos(br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift fichaProcedimentos) {
    this.fichaProcedimentos = fichaProcedimentos;
  }

  public void unsetFichaProcedimentos() {
    this.fichaProcedimentos = null;
  }

  /** Returns true if field fichaProcedimentos is set (has been assigned a value) and false otherwise */
  public boolean isSetFichaProcedimentos() {
    return this.fichaProcedimentos != null;
  }

  public void setFichaProcedimentosIsSet(boolean value) {
    if (!value) {
      this.fichaProcedimentos = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift getHeader() {
    return this.header;
  }

  public void setHeader(br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift header) {
    this.header = header;
  }

  public void unsetHeader() {
    this.header = null;
  }

  /** Returns true if field header is set (has been assigned a value) and false otherwise */
  public boolean isSetHeader() {
    return this.header != null;
  }

  public void setHeaderIsSet(boolean value) {
    if (!value) {
      this.header = null;
    }
  }

  public String getIbgeNascimento() {
    return this.ibgeNascimento;
  }

  public void setIbgeNascimento(String ibgeNascimento) {
    this.ibgeNascimento = ibgeNascimento;
  }

  public void unsetIbgeNascimento() {
    this.ibgeNascimento = null;
  }

  /** Returns true if field ibgeNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetIbgeNascimento() {
    return this.ibgeNascimento != null;
  }

  public void setIbgeNascimentoIsSet(boolean value) {
    if (!value) {
      this.ibgeNascimento = null;
    }
  }

  public String getNomeMaeCidadao() {
    return this.nomeMaeCidadao;
  }

  public void setNomeMaeCidadao(String nomeMaeCidadao) {
    this.nomeMaeCidadao = nomeMaeCidadao;
  }

  public void unsetNomeMaeCidadao() {
    this.nomeMaeCidadao = null;
  }

  /** Returns true if field nomeMaeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMaeCidadao() {
    return this.nomeMaeCidadao != null;
  }

  public void setNomeMaeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeMaeCidadao = null;
    }
  }

  public String getUuidAtendimento() {
    return this.uuidAtendimento;
  }

  public void setUuidAtendimento(String uuidAtendimento) {
    this.uuidAtendimento = uuidAtendimento;
  }

  public void unsetUuidAtendimento() {
    this.uuidAtendimento = null;
  }

  /** Returns true if field uuidAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidAtendimento() {
    return this.uuidAtendimento != null;
  }

  public void setUuidAtendimentoIsSet(boolean value) {
    if (!value) {
      this.uuidAtendimento = null;
    }
  }

  public String getUuidAtendimentoProfissional() {
    return this.uuidAtendimentoProfissional;
  }

  public void setUuidAtendimentoProfissional(String uuidAtendimentoProfissional) {
    this.uuidAtendimentoProfissional = uuidAtendimentoProfissional;
  }

  public void unsetUuidAtendimentoProfissional() {
    this.uuidAtendimentoProfissional = null;
  }

  /** Returns true if field uuidAtendimentoProfissional is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidAtendimentoProfissional() {
    return this.uuidAtendimentoProfissional != null;
  }

  public void setUuidAtendimentoProfissionalIsSet(boolean value) {
    if (!value) {
      this.uuidAtendimentoProfissional = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CNS_CIDADAO:
      if (value == null) {
        unsetCnsCidadao();
      } else {
        setCnsCidadao((String)value);
      }
      break;

    case CPF_CIDADAO:
      if (value == null) {
        unsetCpfCidadao();
      } else {
        setCpfCidadao((String)value);
      }
      break;

    case DT_NASCIMENTO_CIDADAO:
      if (value == null) {
        unsetDtNascimentoCidadao();
      } else {
        setDtNascimentoCidadao((Long)value);
      }
      break;

    case FICHA_ATENDIMENTO_INDIVIDUAL:
      if (value == null) {
        unsetFichaAtendimentoIndividual();
      } else {
        setFichaAtendimentoIndividual((br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift)value);
      }
      break;

    case FICHA_PROCEDIMENTOS:
      if (value == null) {
        unsetFichaProcedimentos();
      } else {
        setFichaProcedimentos((br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift)value);
      }
      break;

    case HEADER:
      if (value == null) {
        unsetHeader();
      } else {
        setHeader((br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift)value);
      }
      break;

    case IBGE_NASCIMENTO:
      if (value == null) {
        unsetIbgeNascimento();
      } else {
        setIbgeNascimento((String)value);
      }
      break;

    case NOME_MAE_CIDADAO:
      if (value == null) {
        unsetNomeMaeCidadao();
      } else {
        setNomeMaeCidadao((String)value);
      }
      break;

    case UUID_ATENDIMENTO:
      if (value == null) {
        unsetUuidAtendimento();
      } else {
        setUuidAtendimento((String)value);
      }
      break;

    case UUID_ATENDIMENTO_PROFISSIONAL:
      if (value == null) {
        unsetUuidAtendimentoProfissional();
      } else {
        setUuidAtendimentoProfissional((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CNS_CIDADAO:
      return getCnsCidadao();

    case CPF_CIDADAO:
      return getCpfCidadao();

    case DT_NASCIMENTO_CIDADAO:
      return Long.valueOf(getDtNascimentoCidadao());

    case FICHA_ATENDIMENTO_INDIVIDUAL:
      return getFichaAtendimentoIndividual();

    case FICHA_PROCEDIMENTOS:
      return getFichaProcedimentos();

    case HEADER:
      return getHeader();

    case IBGE_NASCIMENTO:
      return getIbgeNascimento();

    case NOME_MAE_CIDADAO:
      return getNomeMaeCidadao();

    case UUID_ATENDIMENTO:
      return getUuidAtendimento();

    case UUID_ATENDIMENTO_PROFISSIONAL:
      return getUuidAtendimentoProfissional();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CNS_CIDADAO:
      return isSetCnsCidadao();
    case CPF_CIDADAO:
      return isSetCpfCidadao();
    case DT_NASCIMENTO_CIDADAO:
      return isSetDtNascimentoCidadao();
    case FICHA_ATENDIMENTO_INDIVIDUAL:
      return isSetFichaAtendimentoIndividual();
    case FICHA_PROCEDIMENTOS:
      return isSetFichaProcedimentos();
    case HEADER:
      return isSetHeader();
    case IBGE_NASCIMENTO:
      return isSetIbgeNascimento();
    case NOME_MAE_CIDADAO:
      return isSetNomeMaeCidadao();
    case UUID_ATENDIMENTO:
      return isSetUuidAtendimento();
    case UUID_ATENDIMENTO_PROFISSIONAL:
      return isSetUuidAtendimentoProfissional();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ESUSPECAtendimentoThrift)
      return this.equals((ESUSPECAtendimentoThrift)that);
    return false;
  }

  public boolean equals(ESUSPECAtendimentoThrift that) {
    if (that == null)
      return false;

    boolean this_present_cnsCidadao = true && this.isSetCnsCidadao();
    boolean that_present_cnsCidadao = true && that.isSetCnsCidadao();
    if (this_present_cnsCidadao || that_present_cnsCidadao) {
      if (!(this_present_cnsCidadao && that_present_cnsCidadao))
        return false;
      if (!this.cnsCidadao.equals(that.cnsCidadao))
        return false;
    }

    boolean this_present_cpfCidadao = true && this.isSetCpfCidadao();
    boolean that_present_cpfCidadao = true && that.isSetCpfCidadao();
    if (this_present_cpfCidadao || that_present_cpfCidadao) {
      if (!(this_present_cpfCidadao && that_present_cpfCidadao))
        return false;
      if (!this.cpfCidadao.equals(that.cpfCidadao))
        return false;
    }

    boolean this_present_dtNascimentoCidadao = true && this.isSetDtNascimentoCidadao();
    boolean that_present_dtNascimentoCidadao = true && that.isSetDtNascimentoCidadao();
    if (this_present_dtNascimentoCidadao || that_present_dtNascimentoCidadao) {
      if (!(this_present_dtNascimentoCidadao && that_present_dtNascimentoCidadao))
        return false;
      if (this.dtNascimentoCidadao != that.dtNascimentoCidadao)
        return false;
    }

    boolean this_present_fichaAtendimentoIndividual = true && this.isSetFichaAtendimentoIndividual();
    boolean that_present_fichaAtendimentoIndividual = true && that.isSetFichaAtendimentoIndividual();
    if (this_present_fichaAtendimentoIndividual || that_present_fichaAtendimentoIndividual) {
      if (!(this_present_fichaAtendimentoIndividual && that_present_fichaAtendimentoIndividual))
        return false;
      if (!this.fichaAtendimentoIndividual.equals(that.fichaAtendimentoIndividual))
        return false;
    }

    boolean this_present_fichaProcedimentos = true && this.isSetFichaProcedimentos();
    boolean that_present_fichaProcedimentos = true && that.isSetFichaProcedimentos();
    if (this_present_fichaProcedimentos || that_present_fichaProcedimentos) {
      if (!(this_present_fichaProcedimentos && that_present_fichaProcedimentos))
        return false;
      if (!this.fichaProcedimentos.equals(that.fichaProcedimentos))
        return false;
    }

    boolean this_present_header = true && this.isSetHeader();
    boolean that_present_header = true && that.isSetHeader();
    if (this_present_header || that_present_header) {
      if (!(this_present_header && that_present_header))
        return false;
      if (!this.header.equals(that.header))
        return false;
    }

    boolean this_present_ibgeNascimento = true && this.isSetIbgeNascimento();
    boolean that_present_ibgeNascimento = true && that.isSetIbgeNascimento();
    if (this_present_ibgeNascimento || that_present_ibgeNascimento) {
      if (!(this_present_ibgeNascimento && that_present_ibgeNascimento))
        return false;
      if (!this.ibgeNascimento.equals(that.ibgeNascimento))
        return false;
    }

    boolean this_present_nomeMaeCidadao = true && this.isSetNomeMaeCidadao();
    boolean that_present_nomeMaeCidadao = true && that.isSetNomeMaeCidadao();
    if (this_present_nomeMaeCidadao || that_present_nomeMaeCidadao) {
      if (!(this_present_nomeMaeCidadao && that_present_nomeMaeCidadao))
        return false;
      if (!this.nomeMaeCidadao.equals(that.nomeMaeCidadao))
        return false;
    }

    boolean this_present_uuidAtendimento = true && this.isSetUuidAtendimento();
    boolean that_present_uuidAtendimento = true && that.isSetUuidAtendimento();
    if (this_present_uuidAtendimento || that_present_uuidAtendimento) {
      if (!(this_present_uuidAtendimento && that_present_uuidAtendimento))
        return false;
      if (!this.uuidAtendimento.equals(that.uuidAtendimento))
        return false;
    }

    boolean this_present_uuidAtendimentoProfissional = true && this.isSetUuidAtendimentoProfissional();
    boolean that_present_uuidAtendimentoProfissional = true && that.isSetUuidAtendimentoProfissional();
    if (this_present_uuidAtendimentoProfissional || that_present_uuidAtendimentoProfissional) {
      if (!(this_present_uuidAtendimentoProfissional && that_present_uuidAtendimentoProfissional))
        return false;
      if (!this.uuidAtendimentoProfissional.equals(that.uuidAtendimentoProfissional))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(ESUSPECAtendimentoThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    ESUSPECAtendimentoThrift typedOther = (ESUSPECAtendimentoThrift)other;

    lastComparison = Boolean.valueOf(isSetCnsCidadao()).compareTo(typedOther.isSetCnsCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCnsCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cnsCidadao, typedOther.cnsCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfCidadao()).compareTo(typedOther.isSetCpfCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfCidadao, typedOther.cpfCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtNascimentoCidadao()).compareTo(typedOther.isSetDtNascimentoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtNascimentoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtNascimentoCidadao, typedOther.dtNascimentoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFichaAtendimentoIndividual()).compareTo(typedOther.isSetFichaAtendimentoIndividual());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFichaAtendimentoIndividual()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fichaAtendimentoIndividual, typedOther.fichaAtendimentoIndividual);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFichaProcedimentos()).compareTo(typedOther.isSetFichaProcedimentos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFichaProcedimentos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fichaProcedimentos, typedOther.fichaProcedimentos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeader()).compareTo(typedOther.isSetHeader());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeader()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.header, typedOther.header);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIbgeNascimento()).compareTo(typedOther.isSetIbgeNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIbgeNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ibgeNascimento, typedOther.ibgeNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMaeCidadao()).compareTo(typedOther.isSetNomeMaeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMaeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMaeCidadao, typedOther.nomeMaeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidAtendimento()).compareTo(typedOther.isSetUuidAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidAtendimento, typedOther.uuidAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidAtendimentoProfissional()).compareTo(typedOther.isSetUuidAtendimentoProfissional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidAtendimentoProfissional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidAtendimentoProfissional, typedOther.uuidAtendimentoProfissional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ESUSPECAtendimentoThrift(");
    boolean first = true;

    if (isSetCnsCidadao()) {
      sb.append("cnsCidadao:");
      if (this.cnsCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cnsCidadao);
      }
      first = false;
    }
    if (isSetCpfCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cpfCidadao:");
      if (this.cpfCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.cpfCidadao);
      }
      first = false;
    }
    if (isSetDtNascimentoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("dtNascimentoCidadao:");
      sb.append(this.dtNascimentoCidadao);
      first = false;
    }
    if (isSetFichaAtendimentoIndividual()) {
      if (!first) sb.append(", ");
      sb.append("fichaAtendimentoIndividual:");
      if (this.fichaAtendimentoIndividual == null) {
        sb.append("null");
      } else {
        sb.append(this.fichaAtendimentoIndividual);
      }
      first = false;
    }
    if (isSetFichaProcedimentos()) {
      if (!first) sb.append(", ");
      sb.append("fichaProcedimentos:");
      if (this.fichaProcedimentos == null) {
        sb.append("null");
      } else {
        sb.append(this.fichaProcedimentos);
      }
      first = false;
    }
    if (isSetHeader()) {
      if (!first) sb.append(", ");
      sb.append("header:");
      if (this.header == null) {
        sb.append("null");
      } else {
        sb.append(this.header);
      }
      first = false;
    }
    if (isSetIbgeNascimento()) {
      if (!first) sb.append(", ");
      sb.append("ibgeNascimento:");
      if (this.ibgeNascimento == null) {
        sb.append("null");
      } else {
        sb.append(this.ibgeNascimento);
      }
      first = false;
    }
    if (isSetNomeMaeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeMaeCidadao:");
      if (this.nomeMaeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMaeCidadao);
      }
      first = false;
    }
    if (isSetUuidAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("uuidAtendimento:");
      if (this.uuidAtendimento == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidAtendimento);
      }
      first = false;
    }
    if (isSetUuidAtendimentoProfissional()) {
      if (!first) sb.append(", ");
      sb.append("uuidAtendimentoProfissional:");
      if (this.uuidAtendimentoProfissional == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidAtendimentoProfissional);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (fichaAtendimentoIndividual != null) {
      fichaAtendimentoIndividual.validate();
    }
    if (fichaProcedimentos != null) {
      fichaProcedimentos.validate();
    }
    if (header != null) {
      header.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ESUSPECAtendimentoThriftStandardSchemeFactory implements SchemeFactory {
    public ESUSPECAtendimentoThriftStandardScheme getScheme() {
      return new ESUSPECAtendimentoThriftStandardScheme();
    }
  }

  private static class ESUSPECAtendimentoThriftStandardScheme extends StandardScheme<ESUSPECAtendimentoThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ESUSPECAtendimentoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CNS_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cnsCidadao = iprot.readString();
              struct.setCnsCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CPF_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfCidadao = iprot.readString();
              struct.setCpfCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DT_NASCIMENTO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtNascimentoCidadao = iprot.readI64();
              struct.setDtNascimentoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FICHA_ATENDIMENTO_INDIVIDUAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fichaAtendimentoIndividual = new br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift();
              struct.fichaAtendimentoIndividual.read(iprot);
              struct.setFichaAtendimentoIndividualIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FICHA_PROCEDIMENTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.fichaProcedimentos = new br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift();
              struct.fichaProcedimentos.read(iprot);
              struct.setFichaProcedimentosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HEADER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.header = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
              struct.header.read(iprot);
              struct.setHeaderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // IBGE_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ibgeNascimento = iprot.readString();
              struct.setIbgeNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NOME_MAE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMaeCidadao = iprot.readString();
              struct.setNomeMaeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UUID_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidAtendimento = iprot.readString();
              struct.setUuidAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UUID_ATENDIMENTO_PROFISSIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidAtendimentoProfissional = iprot.readString();
              struct.setUuidAtendimentoProfissionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ESUSPECAtendimentoThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.cnsCidadao != null) {
        if (struct.isSetCnsCidadao()) {
          oprot.writeFieldBegin(CNS_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cnsCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cpfCidadao != null) {
        if (struct.isSetCpfCidadao()) {
          oprot.writeFieldBegin(CPF_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.cpfCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDtNascimentoCidadao()) {
        oprot.writeFieldBegin(DT_NASCIMENTO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.dtNascimentoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.fichaAtendimentoIndividual != null) {
        if (struct.isSetFichaAtendimentoIndividual()) {
          oprot.writeFieldBegin(FICHA_ATENDIMENTO_INDIVIDUAL_FIELD_DESC);
          struct.fichaAtendimentoIndividual.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.fichaProcedimentos != null) {
        if (struct.isSetFichaProcedimentos()) {
          oprot.writeFieldBegin(FICHA_PROCEDIMENTOS_FIELD_DESC);
          struct.fichaProcedimentos.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.header != null) {
        if (struct.isSetHeader()) {
          oprot.writeFieldBegin(HEADER_FIELD_DESC);
          struct.header.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ibgeNascimento != null) {
        if (struct.isSetIbgeNascimento()) {
          oprot.writeFieldBegin(IBGE_NASCIMENTO_FIELD_DESC);
          oprot.writeString(struct.ibgeNascimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeMaeCidadao != null) {
        if (struct.isSetNomeMaeCidadao()) {
          oprot.writeFieldBegin(NOME_MAE_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeMaeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.uuidAtendimento != null) {
        if (struct.isSetUuidAtendimento()) {
          oprot.writeFieldBegin(UUID_ATENDIMENTO_FIELD_DESC);
          oprot.writeString(struct.uuidAtendimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.uuidAtendimentoProfissional != null) {
        if (struct.isSetUuidAtendimentoProfissional()) {
          oprot.writeFieldBegin(UUID_ATENDIMENTO_PROFISSIONAL_FIELD_DESC);
          oprot.writeString(struct.uuidAtendimentoProfissional);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ESUSPECAtendimentoThriftTupleSchemeFactory implements SchemeFactory {
    public ESUSPECAtendimentoThriftTupleScheme getScheme() {
      return new ESUSPECAtendimentoThriftTupleScheme();
    }
  }

  private static class ESUSPECAtendimentoThriftTupleScheme extends TupleScheme<ESUSPECAtendimentoThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ESUSPECAtendimentoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetCnsCidadao()) {
        optionals.set(0);
      }
      if (struct.isSetCpfCidadao()) {
        optionals.set(1);
      }
      if (struct.isSetDtNascimentoCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetFichaAtendimentoIndividual()) {
        optionals.set(3);
      }
      if (struct.isSetFichaProcedimentos()) {
        optionals.set(4);
      }
      if (struct.isSetHeader()) {
        optionals.set(5);
      }
      if (struct.isSetIbgeNascimento()) {
        optionals.set(6);
      }
      if (struct.isSetNomeMaeCidadao()) {
        optionals.set(7);
      }
      if (struct.isSetUuidAtendimento()) {
        optionals.set(8);
      }
      if (struct.isSetUuidAtendimentoProfissional()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetCnsCidadao()) {
        oprot.writeString(struct.cnsCidadao);
      }
      if (struct.isSetCpfCidadao()) {
        oprot.writeString(struct.cpfCidadao);
      }
      if (struct.isSetDtNascimentoCidadao()) {
        oprot.writeI64(struct.dtNascimentoCidadao);
      }
      if (struct.isSetFichaAtendimentoIndividual()) {
        struct.fichaAtendimentoIndividual.write(oprot);
      }
      if (struct.isSetFichaProcedimentos()) {
        struct.fichaProcedimentos.write(oprot);
      }
      if (struct.isSetHeader()) {
        struct.header.write(oprot);
      }
      if (struct.isSetIbgeNascimento()) {
        oprot.writeString(struct.ibgeNascimento);
      }
      if (struct.isSetNomeMaeCidadao()) {
        oprot.writeString(struct.nomeMaeCidadao);
      }
      if (struct.isSetUuidAtendimento()) {
        oprot.writeString(struct.uuidAtendimento);
      }
      if (struct.isSetUuidAtendimentoProfissional()) {
        oprot.writeString(struct.uuidAtendimentoProfissional);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ESUSPECAtendimentoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.cnsCidadao = iprot.readString();
        struct.setCnsCidadaoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cpfCidadao = iprot.readString();
        struct.setCpfCidadaoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dtNascimentoCidadao = iprot.readI64();
        struct.setDtNascimentoCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fichaAtendimentoIndividual = new br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual.FichaAtendimentoIndividualMasterThrift();
        struct.fichaAtendimentoIndividual.read(iprot);
        struct.setFichaAtendimentoIndividualIsSet(true);
      }
      if (incoming.get(4)) {
        struct.fichaProcedimentos = new br.gov.saude.esus.cds.transport.generated.thrift.procedimento.FichaProcedimentoMasterThrift();
        struct.fichaProcedimentos.read(iprot);
        struct.setFichaProcedimentosIsSet(true);
      }
      if (incoming.get(5)) {
        struct.header = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
        struct.header.read(iprot);
        struct.setHeaderIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ibgeNascimento = iprot.readString();
        struct.setIbgeNascimentoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nomeMaeCidadao = iprot.readString();
        struct.setNomeMaeCidadaoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.uuidAtendimento = iprot.readString();
        struct.setUuidAtendimentoIsSet(true);
      }
      if (incoming.get(9)) {
        struct.uuidAtendimentoProfissional = iprot.readString();
        struct.setUuidAtendimentoProfissionalIsSet(true);
      }
    }
  }

}

