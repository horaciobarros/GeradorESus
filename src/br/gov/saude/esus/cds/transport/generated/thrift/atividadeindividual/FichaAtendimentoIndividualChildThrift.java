/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.atividadeindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class FichaAtendimentoIndividualChildThrift implements org.apache.thrift.TBase<FichaAtendimentoIndividualChildThrift, FichaAtendimentoIndividualChildThrift._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAtendimentoIndividualChildThrift");

  private static final org.apache.thrift.protocol.TField NUMERO_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroProntuario", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CNS_FIELD_DESC = new org.apache.thrift.protocol.TField("cns", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimento", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField LOCAL_DE_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("localDeAtendimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField TIPO_ATENDIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoAtendimento", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField PESO_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("pesoAcompanhamentoNutricional", org.apache.thrift.protocol.TType.DOUBLE, (short)8);
  private static final org.apache.thrift.protocol.TField ALTURA_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("alturaAcompanhamentoNutricional", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField ALEITAMENTO_MATERNO_FIELD_DESC = new org.apache.thrift.protocol.TField("aleitamentoMaterno", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField DUM_DA_GESTANTE_FIELD_DESC = new org.apache.thrift.protocol.TField("dumDaGestante", org.apache.thrift.protocol.TType.I64, (short)11);
  private static final org.apache.thrift.protocol.TField IDADE_GESTACIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("idadeGestacional", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarModalidade", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField PROBLEMA_CONDICAO_AVALIADA_FIELD_DESC = new org.apache.thrift.protocol.TField("problemaCondicaoAvaliada", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField EXAMES_SOLICITADOS_FIELD_DESC = new org.apache.thrift.protocol.TField("examesSolicitados", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField EXAMES_AVALIADOS_FIELD_DESC = new org.apache.thrift.protocol.TField("examesAvaliados", org.apache.thrift.protocol.TType.LIST, (short)16);
  private static final org.apache.thrift.protocol.TField OUTROS_SIA_FIELD_DESC = new org.apache.thrift.protocol.TField("outrosSia", org.apache.thrift.protocol.TType.LIST, (short)17);
  private static final org.apache.thrift.protocol.TField VACINA_EM_DIA_FIELD_DESC = new org.apache.thrift.protocol.TField("vacinaEmDia", org.apache.thrift.protocol.TType.BOOL, (short)18);
  private static final org.apache.thrift.protocol.TField PIC_FIELD_DESC = new org.apache.thrift.protocol.TField("pic", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField FICOU_EM_OBSERVACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("ficouEmObservacao", org.apache.thrift.protocol.TType.BOOL, (short)20);
  private static final org.apache.thrift.protocol.TField NASFS_FIELD_DESC = new org.apache.thrift.protocol.TField("nasfs", org.apache.thrift.protocol.TType.LIST, (short)21);
  private static final org.apache.thrift.protocol.TField CONDUTAS_FIELD_DESC = new org.apache.thrift.protocol.TField("condutas", org.apache.thrift.protocol.TType.LIST, (short)22);
  private static final org.apache.thrift.protocol.TField ST_GRAVIDEZ_PLANEJADA_FIELD_DESC = new org.apache.thrift.protocol.TField("stGravidezPlanejada", org.apache.thrift.protocol.TType.BOOL, (short)23);
  private static final org.apache.thrift.protocol.TField NU_GESTAS_PREVIAS_FIELD_DESC = new org.apache.thrift.protocol.TField("nuGestasPrevias", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField NU_PARTOS_FIELD_DESC = new org.apache.thrift.protocol.TField("nuPartos", org.apache.thrift.protocol.TType.I32, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAtendimentoIndividualChildThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAtendimentoIndividualChildThriftTupleSchemeFactory());
  }

  private String numeroProntuario; // optional
  private String cns; // optional
  private long dataNascimento; // optional
  private long localDeAtendimento; // optional
  private long sexo; // optional
  private long turno; // optional
  private long tipoAtendimento; // optional
  private double pesoAcompanhamentoNutricional; // optional
  private double alturaAcompanhamentoNutricional; // optional
  private long aleitamentoMaterno; // optional
  private long dumDaGestante; // optional
  private int idadeGestacional; // optional
  private long atencaoDomiciliarModalidade; // optional
  private ProblemaCondicaoAvaliacaoAIThrift problemaCondicaoAvaliada; // optional
  private List<String> examesSolicitados; // optional
  private List<String> examesAvaliados; // optional
  private List<OutrosSiaThrift> outrosSia; // optional
  private boolean vacinaEmDia; // optional
  private long pic; // optional
  private boolean ficouEmObservacao; // optional
  private List<Long> nasfs; // optional
  private List<Long> condutas; // optional
  private boolean stGravidezPlanejada; // optional
  private int nuGestasPrevias; // optional
  private int nuPartos; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NUMERO_PRONTUARIO((short)1, "numeroProntuario"),
    CNS((short)2, "cns"),
    DATA_NASCIMENTO((short)3, "dataNascimento"),
    LOCAL_DE_ATENDIMENTO((short)4, "localDeAtendimento"),
    SEXO((short)5, "sexo"),
    TURNO((short)6, "turno"),
    TIPO_ATENDIMENTO((short)7, "tipoAtendimento"),
    PESO_ACOMPANHAMENTO_NUTRICIONAL((short)8, "pesoAcompanhamentoNutricional"),
    ALTURA_ACOMPANHAMENTO_NUTRICIONAL((short)9, "alturaAcompanhamentoNutricional"),
    ALEITAMENTO_MATERNO((short)10, "aleitamentoMaterno"),
    DUM_DA_GESTANTE((short)11, "dumDaGestante"),
    IDADE_GESTACIONAL((short)12, "idadeGestacional"),
    ATENCAO_DOMICILIAR_MODALIDADE((short)13, "atencaoDomiciliarModalidade"),
    PROBLEMA_CONDICAO_AVALIADA((short)14, "problemaCondicaoAvaliada"),
    EXAMES_SOLICITADOS((short)15, "examesSolicitados"),
    EXAMES_AVALIADOS((short)16, "examesAvaliados"),
    OUTROS_SIA((short)17, "outrosSia"),
    VACINA_EM_DIA((short)18, "vacinaEmDia"),
    PIC((short)19, "pic"),
    FICOU_EM_OBSERVACAO((short)20, "ficouEmObservacao"),
    NASFS((short)21, "nasfs"),
    CONDUTAS((short)22, "condutas"),
    ST_GRAVIDEZ_PLANEJADA((short)23, "stGravidezPlanejada"),
    NU_GESTAS_PREVIAS((short)24, "nuGestasPrevias"),
    NU_PARTOS((short)25, "nuPartos");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NUMERO_PRONTUARIO
          return NUMERO_PRONTUARIO;
        case 2: // CNS
          return CNS;
        case 3: // DATA_NASCIMENTO
          return DATA_NASCIMENTO;
        case 4: // LOCAL_DE_ATENDIMENTO
          return LOCAL_DE_ATENDIMENTO;
        case 5: // SEXO
          return SEXO;
        case 6: // TURNO
          return TURNO;
        case 7: // TIPO_ATENDIMENTO
          return TIPO_ATENDIMENTO;
        case 8: // PESO_ACOMPANHAMENTO_NUTRICIONAL
          return PESO_ACOMPANHAMENTO_NUTRICIONAL;
        case 9: // ALTURA_ACOMPANHAMENTO_NUTRICIONAL
          return ALTURA_ACOMPANHAMENTO_NUTRICIONAL;
        case 10: // ALEITAMENTO_MATERNO
          return ALEITAMENTO_MATERNO;
        case 11: // DUM_DA_GESTANTE
          return DUM_DA_GESTANTE;
        case 12: // IDADE_GESTACIONAL
          return IDADE_GESTACIONAL;
        case 13: // ATENCAO_DOMICILIAR_MODALIDADE
          return ATENCAO_DOMICILIAR_MODALIDADE;
        case 14: // PROBLEMA_CONDICAO_AVALIADA
          return PROBLEMA_CONDICAO_AVALIADA;
        case 15: // EXAMES_SOLICITADOS
          return EXAMES_SOLICITADOS;
        case 16: // EXAMES_AVALIADOS
          return EXAMES_AVALIADOS;
        case 17: // OUTROS_SIA
          return OUTROS_SIA;
        case 18: // VACINA_EM_DIA
          return VACINA_EM_DIA;
        case 19: // PIC
          return PIC;
        case 20: // FICOU_EM_OBSERVACAO
          return FICOU_EM_OBSERVACAO;
        case 21: // NASFS
          return NASFS;
        case 22: // CONDUTAS
          return CONDUTAS;
        case 23: // ST_GRAVIDEZ_PLANEJADA
          return ST_GRAVIDEZ_PLANEJADA;
        case 24: // NU_GESTAS_PREVIAS
          return NU_GESTAS_PREVIAS;
        case 25: // NU_PARTOS
          return NU_PARTOS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTO_ISSET_ID = 0;
  private static final int __LOCALDEATENDIMENTO_ISSET_ID = 1;
  private static final int __SEXO_ISSET_ID = 2;
  private static final int __TURNO_ISSET_ID = 3;
  private static final int __TIPOATENDIMENTO_ISSET_ID = 4;
  private static final int __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID = 5;
  private static final int __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID = 6;
  private static final int __ALEITAMENTOMATERNO_ISSET_ID = 7;
  private static final int __DUMDAGESTANTE_ISSET_ID = 8;
  private static final int __IDADEGESTACIONAL_ISSET_ID = 9;
  private static final int __ATENCAODOMICILIARMODALIDADE_ISSET_ID = 10;
  private static final int __VACINAEMDIA_ISSET_ID = 11;
  private static final int __PIC_ISSET_ID = 12;
  private static final int __FICOUEMOBSERVACAO_ISSET_ID = 13;
  private static final int __STGRAVIDEZPLANEJADA_ISSET_ID = 14;
  private static final int __NUGESTASPREVIAS_ISSET_ID = 15;
  private static final int __NUPARTOS_ISSET_ID = 16;
  private int __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.NUMERO_PRONTUARIO,_Fields.CNS,_Fields.DATA_NASCIMENTO,_Fields.LOCAL_DE_ATENDIMENTO,_Fields.SEXO,_Fields.TURNO,_Fields.TIPO_ATENDIMENTO,_Fields.PESO_ACOMPANHAMENTO_NUTRICIONAL,_Fields.ALTURA_ACOMPANHAMENTO_NUTRICIONAL,_Fields.ALEITAMENTO_MATERNO,_Fields.DUM_DA_GESTANTE,_Fields.IDADE_GESTACIONAL,_Fields.ATENCAO_DOMICILIAR_MODALIDADE,_Fields.PROBLEMA_CONDICAO_AVALIADA,_Fields.EXAMES_SOLICITADOS,_Fields.EXAMES_AVALIADOS,_Fields.OUTROS_SIA,_Fields.VACINA_EM_DIA,_Fields.PIC,_Fields.FICOU_EM_OBSERVACAO,_Fields.NASFS,_Fields.CONDUTAS,_Fields.ST_GRAVIDEZ_PLANEJADA,_Fields.NU_GESTAS_PREVIAS,_Fields.NU_PARTOS};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NUMERO_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numeroProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CNS, new org.apache.thrift.meta_data.FieldMetaData("cns", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOCAL_DE_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("localDeAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TIPO_ATENDIMENTO, new org.apache.thrift.meta_data.FieldMetaData("tipoAtendimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PESO_ACOMPANHAMENTO_NUTRICIONAL, new org.apache.thrift.meta_data.FieldMetaData("pesoAcompanhamentoNutricional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ALTURA_ACOMPANHAMENTO_NUTRICIONAL, new org.apache.thrift.meta_data.FieldMetaData("alturaAcompanhamentoNutricional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ALEITAMENTO_MATERNO, new org.apache.thrift.meta_data.FieldMetaData("aleitamentoMaterno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DUM_DA_GESTANTE, new org.apache.thrift.meta_data.FieldMetaData("dumDaGestante", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.IDADE_GESTACIONAL, new org.apache.thrift.meta_data.FieldMetaData("idadeGestacional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_MODALIDADE, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarModalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROBLEMA_CONDICAO_AVALIADA, new org.apache.thrift.meta_data.FieldMetaData("problemaCondicaoAvaliada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProblemaCondicaoAvaliacaoAIThrift.class)));
    tmpMap.put(_Fields.EXAMES_SOLICITADOS, new org.apache.thrift.meta_data.FieldMetaData("examesSolicitados", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.EXAMES_AVALIADOS, new org.apache.thrift.meta_data.FieldMetaData("examesAvaliados", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.OUTROS_SIA, new org.apache.thrift.meta_data.FieldMetaData("outrosSia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OutrosSiaThrift.class))));
    tmpMap.put(_Fields.VACINA_EM_DIA, new org.apache.thrift.meta_data.FieldMetaData("vacinaEmDia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PIC, new org.apache.thrift.meta_data.FieldMetaData("pic", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FICOU_EM_OBSERVACAO, new org.apache.thrift.meta_data.FieldMetaData("ficouEmObservacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NASFS, new org.apache.thrift.meta_data.FieldMetaData("nasfs", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CONDUTAS, new org.apache.thrift.meta_data.FieldMetaData("condutas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.ST_GRAVIDEZ_PLANEJADA, new org.apache.thrift.meta_data.FieldMetaData("stGravidezPlanejada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NU_GESTAS_PREVIAS, new org.apache.thrift.meta_data.FieldMetaData("nuGestasPrevias", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NU_PARTOS, new org.apache.thrift.meta_data.FieldMetaData("nuPartos", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAtendimentoIndividualChildThrift.class, metaDataMap);
  }

  public FichaAtendimentoIndividualChildThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAtendimentoIndividualChildThrift(FichaAtendimentoIndividualChildThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetNumeroProntuario()) {
      this.numeroProntuario = other.numeroProntuario;
    }
    if (other.isSetCns()) {
      this.cns = other.cns;
    }
    this.dataNascimento = other.dataNascimento;
    this.localDeAtendimento = other.localDeAtendimento;
    this.sexo = other.sexo;
    this.turno = other.turno;
    this.tipoAtendimento = other.tipoAtendimento;
    this.pesoAcompanhamentoNutricional = other.pesoAcompanhamentoNutricional;
    this.alturaAcompanhamentoNutricional = other.alturaAcompanhamentoNutricional;
    this.aleitamentoMaterno = other.aleitamentoMaterno;
    this.dumDaGestante = other.dumDaGestante;
    this.idadeGestacional = other.idadeGestacional;
    this.atencaoDomiciliarModalidade = other.atencaoDomiciliarModalidade;
    if (other.isSetProblemaCondicaoAvaliada()) {
      this.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift(other.problemaCondicaoAvaliada);
    }
    if (other.isSetExamesSolicitados()) {
      List<String> __this__examesSolicitados = new ArrayList<String>();
      for (String other_element : other.examesSolicitados) {
        __this__examesSolicitados.add(other_element);
      }
      this.examesSolicitados = __this__examesSolicitados;
    }
    if (other.isSetExamesAvaliados()) {
      List<String> __this__examesAvaliados = new ArrayList<String>();
      for (String other_element : other.examesAvaliados) {
        __this__examesAvaliados.add(other_element);
      }
      this.examesAvaliados = __this__examesAvaliados;
    }
    if (other.isSetOutrosSia()) {
      List<OutrosSiaThrift> __this__outrosSia = new ArrayList<OutrosSiaThrift>();
      for (OutrosSiaThrift other_element : other.outrosSia) {
        __this__outrosSia.add(new OutrosSiaThrift(other_element));
      }
      this.outrosSia = __this__outrosSia;
    }
    this.vacinaEmDia = other.vacinaEmDia;
    this.pic = other.pic;
    this.ficouEmObservacao = other.ficouEmObservacao;
    if (other.isSetNasfs()) {
      List<Long> __this__nasfs = new ArrayList<Long>();
      for (Long other_element : other.nasfs) {
        __this__nasfs.add(other_element);
      }
      this.nasfs = __this__nasfs;
    }
    if (other.isSetCondutas()) {
      List<Long> __this__condutas = new ArrayList<Long>();
      for (Long other_element : other.condutas) {
        __this__condutas.add(other_element);
      }
      this.condutas = __this__condutas;
    }
    this.stGravidezPlanejada = other.stGravidezPlanejada;
    this.nuGestasPrevias = other.nuGestasPrevias;
    this.nuPartos = other.nuPartos;
  }

  public FichaAtendimentoIndividualChildThrift deepCopy() {
    return new FichaAtendimentoIndividualChildThrift(this);
  }

  @Override
  public void clear() {
    this.numeroProntuario = null;
    this.cns = null;
    setDataNascimentoIsSet(false);
    this.dataNascimento = 0;
    setLocalDeAtendimentoIsSet(false);
    this.localDeAtendimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setTurnoIsSet(false);
    this.turno = 0;
    setTipoAtendimentoIsSet(false);
    this.tipoAtendimento = 0;
    setPesoAcompanhamentoNutricionalIsSet(false);
    this.pesoAcompanhamentoNutricional = 0.0;
    setAlturaAcompanhamentoNutricionalIsSet(false);
    this.alturaAcompanhamentoNutricional = 0.0;
    setAleitamentoMaternoIsSet(false);
    this.aleitamentoMaterno = 0;
    setDumDaGestanteIsSet(false);
    this.dumDaGestante = 0;
    setIdadeGestacionalIsSet(false);
    this.idadeGestacional = 0;
    setAtencaoDomiciliarModalidadeIsSet(false);
    this.atencaoDomiciliarModalidade = 0;
    this.problemaCondicaoAvaliada = null;
    this.examesSolicitados = null;
    this.examesAvaliados = null;
    this.outrosSia = null;
    setVacinaEmDiaIsSet(false);
    this.vacinaEmDia = false;
    setPicIsSet(false);
    this.pic = 0;
    setFicouEmObservacaoIsSet(false);
    this.ficouEmObservacao = false;
    this.nasfs = null;
    this.condutas = null;
    setStGravidezPlanejadaIsSet(false);
    this.stGravidezPlanejada = false;
    setNuGestasPreviasIsSet(false);
    this.nuGestasPrevias = 0;
    setNuPartosIsSet(false);
    this.nuPartos = 0;
  }

  public String getNumeroProntuario() {
    return this.numeroProntuario;
  }

  public void setNumeroProntuario(String numeroProntuario) {
    this.numeroProntuario = numeroProntuario;
  }

  public void unsetNumeroProntuario() {
    this.numeroProntuario = null;
  }

  /** Returns true if field numeroProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroProntuario() {
    return this.numeroProntuario != null;
  }

  public void setNumeroProntuarioIsSet(boolean value) {
    if (!value) {
      this.numeroProntuario = null;
    }
  }

  public String getCns() {
    return this.cns;
  }

  public void setCns(String cns) {
    this.cns = cns;
  }

  public void unsetCns() {
    this.cns = null;
  }

  /** Returns true if field cns is set (has been assigned a value) and false otherwise */
  public boolean isSetCns() {
    return this.cns != null;
  }

  public void setCnsIsSet(boolean value) {
    if (!value) {
      this.cns = null;
    }
  }

  public long getDataNascimento() {
    return this.dataNascimento;
  }

  public void setDataNascimento(long dataNascimento) {
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
  }

  public void unsetDataNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dataNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  public void setDataNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID, value);
  }

  public long getLocalDeAtendimento() {
    return this.localDeAtendimento;
  }

  public void setLocalDeAtendimento(long localDeAtendimento) {
    this.localDeAtendimento = localDeAtendimento;
    setLocalDeAtendimentoIsSet(true);
  }

  public void unsetLocalDeAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field localDeAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalDeAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID);
  }

  public void setLocalDeAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LOCALDEATENDIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public long getTipoAtendimento() {
    return this.tipoAtendimento;
  }

  public void setTipoAtendimento(long tipoAtendimento) {
    this.tipoAtendimento = tipoAtendimento;
    setTipoAtendimentoIsSet(true);
  }

  public void unsetTipoAtendimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  /** Returns true if field tipoAtendimento is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoAtendimento() {
    return EncodingUtils.testBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID);
  }

  public void setTipoAtendimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TIPOATENDIMENTO_ISSET_ID, value);
  }

  public double getPesoAcompanhamentoNutricional() {
    return this.pesoAcompanhamentoNutricional;
  }

  public void setPesoAcompanhamentoNutricional(double pesoAcompanhamentoNutricional) {
    this.pesoAcompanhamentoNutricional = pesoAcompanhamentoNutricional;
    setPesoAcompanhamentoNutricionalIsSet(true);
  }

  public void unsetPesoAcompanhamentoNutricional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  /** Returns true if field pesoAcompanhamentoNutricional is set (has been assigned a value) and false otherwise */
  public boolean isSetPesoAcompanhamentoNutricional() {
    return EncodingUtils.testBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  public void setPesoAcompanhamentoNutricionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PESOACOMPANHAMENTONUTRICIONAL_ISSET_ID, value);
  }

  public double getAlturaAcompanhamentoNutricional() {
    return this.alturaAcompanhamentoNutricional;
  }

  public void setAlturaAcompanhamentoNutricional(double alturaAcompanhamentoNutricional) {
    this.alturaAcompanhamentoNutricional = alturaAcompanhamentoNutricional;
    setAlturaAcompanhamentoNutricionalIsSet(true);
  }

  public void unsetAlturaAcompanhamentoNutricional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  /** Returns true if field alturaAcompanhamentoNutricional is set (has been assigned a value) and false otherwise */
  public boolean isSetAlturaAcompanhamentoNutricional() {
    return EncodingUtils.testBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID);
  }

  public void setAlturaAcompanhamentoNutricionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ALTURAACOMPANHAMENTONUTRICIONAL_ISSET_ID, value);
  }

  public long getAleitamentoMaterno() {
    return this.aleitamentoMaterno;
  }

  public void setAleitamentoMaterno(long aleitamentoMaterno) {
    this.aleitamentoMaterno = aleitamentoMaterno;
    setAleitamentoMaternoIsSet(true);
  }

  public void unsetAleitamentoMaterno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID);
  }

  /** Returns true if field aleitamentoMaterno is set (has been assigned a value) and false otherwise */
  public boolean isSetAleitamentoMaterno() {
    return EncodingUtils.testBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID);
  }

  public void setAleitamentoMaternoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ALEITAMENTOMATERNO_ISSET_ID, value);
  }

  public long getDumDaGestante() {
    return this.dumDaGestante;
  }

  public void setDumDaGestante(long dumDaGestante) {
    this.dumDaGestante = dumDaGestante;
    setDumDaGestanteIsSet(true);
  }

  public void unsetDumDaGestante() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID);
  }

  /** Returns true if field dumDaGestante is set (has been assigned a value) and false otherwise */
  public boolean isSetDumDaGestante() {
    return EncodingUtils.testBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID);
  }

  public void setDumDaGestanteIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DUMDAGESTANTE_ISSET_ID, value);
  }

  public int getIdadeGestacional() {
    return this.idadeGestacional;
  }

  public void setIdadeGestacional(int idadeGestacional) {
    this.idadeGestacional = idadeGestacional;
    setIdadeGestacionalIsSet(true);
  }

  public void unsetIdadeGestacional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID);
  }

  /** Returns true if field idadeGestacional is set (has been assigned a value) and false otherwise */
  public boolean isSetIdadeGestacional() {
    return EncodingUtils.testBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID);
  }

  public void setIdadeGestacionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __IDADEGESTACIONAL_ISSET_ID, value);
  }

  public long getAtencaoDomiciliarModalidade() {
    return this.atencaoDomiciliarModalidade;
  }

  public void setAtencaoDomiciliarModalidade(long atencaoDomiciliarModalidade) {
    this.atencaoDomiciliarModalidade = atencaoDomiciliarModalidade;
    setAtencaoDomiciliarModalidadeIsSet(true);
  }

  public void unsetAtencaoDomiciliarModalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarModalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarModalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  public void setAtencaoDomiciliarModalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID, value);
  }

  public ProblemaCondicaoAvaliacaoAIThrift getProblemaCondicaoAvaliada() {
    return this.problemaCondicaoAvaliada;
  }

  public void setProblemaCondicaoAvaliada(ProblemaCondicaoAvaliacaoAIThrift problemaCondicaoAvaliada) {
    this.problemaCondicaoAvaliada = problemaCondicaoAvaliada;
  }

  public void unsetProblemaCondicaoAvaliada() {
    this.problemaCondicaoAvaliada = null;
  }

  /** Returns true if field problemaCondicaoAvaliada is set (has been assigned a value) and false otherwise */
  public boolean isSetProblemaCondicaoAvaliada() {
    return this.problemaCondicaoAvaliada != null;
  }

  public void setProblemaCondicaoAvaliadaIsSet(boolean value) {
    if (!value) {
      this.problemaCondicaoAvaliada = null;
    }
  }

  public int getExamesSolicitadosSize() {
    return (this.examesSolicitados == null) ? 0 : this.examesSolicitados.size();
  }

  public java.util.Iterator<String> getExamesSolicitadosIterator() {
    return (this.examesSolicitados == null) ? null : this.examesSolicitados.iterator();
  }

  public void addToExamesSolicitados(String elem) {
    if (this.examesSolicitados == null) {
      this.examesSolicitados = new ArrayList<String>();
    }
    this.examesSolicitados.add(elem);
  }

  public List<String> getExamesSolicitados() {
    return this.examesSolicitados;
  }

  public void setExamesSolicitados(List<String> examesSolicitados) {
    this.examesSolicitados = examesSolicitados;
  }

  public void unsetExamesSolicitados() {
    this.examesSolicitados = null;
  }

  /** Returns true if field examesSolicitados is set (has been assigned a value) and false otherwise */
  public boolean isSetExamesSolicitados() {
    return this.examesSolicitados != null;
  }

  public void setExamesSolicitadosIsSet(boolean value) {
    if (!value) {
      this.examesSolicitados = null;
    }
  }

  public int getExamesAvaliadosSize() {
    return (this.examesAvaliados == null) ? 0 : this.examesAvaliados.size();
  }

  public java.util.Iterator<String> getExamesAvaliadosIterator() {
    return (this.examesAvaliados == null) ? null : this.examesAvaliados.iterator();
  }

  public void addToExamesAvaliados(String elem) {
    if (this.examesAvaliados == null) {
      this.examesAvaliados = new ArrayList<String>();
    }
    this.examesAvaliados.add(elem);
  }

  public List<String> getExamesAvaliados() {
    return this.examesAvaliados;
  }

  public void setExamesAvaliados(List<String> examesAvaliados) {
    this.examesAvaliados = examesAvaliados;
  }

  public void unsetExamesAvaliados() {
    this.examesAvaliados = null;
  }

  /** Returns true if field examesAvaliados is set (has been assigned a value) and false otherwise */
  public boolean isSetExamesAvaliados() {
    return this.examesAvaliados != null;
  }

  public void setExamesAvaliadosIsSet(boolean value) {
    if (!value) {
      this.examesAvaliados = null;
    }
  }

  public int getOutrosSiaSize() {
    return (this.outrosSia == null) ? 0 : this.outrosSia.size();
  }

  public java.util.Iterator<OutrosSiaThrift> getOutrosSiaIterator() {
    return (this.outrosSia == null) ? null : this.outrosSia.iterator();
  }

  public void addToOutrosSia(OutrosSiaThrift elem) {
    if (this.outrosSia == null) {
      this.outrosSia = new ArrayList<OutrosSiaThrift>();
    }
    this.outrosSia.add(elem);
  }

  public List<OutrosSiaThrift> getOutrosSia() {
    return this.outrosSia;
  }

  public void setOutrosSia(List<OutrosSiaThrift> outrosSia) {
    this.outrosSia = outrosSia;
  }

  public void unsetOutrosSia() {
    this.outrosSia = null;
  }

  /** Returns true if field outrosSia is set (has been assigned a value) and false otherwise */
  public boolean isSetOutrosSia() {
    return this.outrosSia != null;
  }

  public void setOutrosSiaIsSet(boolean value) {
    if (!value) {
      this.outrosSia = null;
    }
  }

  public boolean isVacinaEmDia() {
    return this.vacinaEmDia;
  }

  public void setVacinaEmDia(boolean vacinaEmDia) {
    this.vacinaEmDia = vacinaEmDia;
    setVacinaEmDiaIsSet(true);
  }

  public void unsetVacinaEmDia() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID);
  }

  /** Returns true if field vacinaEmDia is set (has been assigned a value) and false otherwise */
  public boolean isSetVacinaEmDia() {
    return EncodingUtils.testBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID);
  }

  public void setVacinaEmDiaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __VACINAEMDIA_ISSET_ID, value);
  }

  public long getPic() {
    return this.pic;
  }

  public void setPic(long pic) {
    this.pic = pic;
    setPicIsSet(true);
  }

  public void unsetPic() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PIC_ISSET_ID);
  }

  /** Returns true if field pic is set (has been assigned a value) and false otherwise */
  public boolean isSetPic() {
    return EncodingUtils.testBit(__isset_bitfield, __PIC_ISSET_ID);
  }

  public void setPicIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PIC_ISSET_ID, value);
  }

  public boolean isFicouEmObservacao() {
    return this.ficouEmObservacao;
  }

  public void setFicouEmObservacao(boolean ficouEmObservacao) {
    this.ficouEmObservacao = ficouEmObservacao;
    setFicouEmObservacaoIsSet(true);
  }

  public void unsetFicouEmObservacao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID);
  }

  /** Returns true if field ficouEmObservacao is set (has been assigned a value) and false otherwise */
  public boolean isSetFicouEmObservacao() {
    return EncodingUtils.testBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID);
  }

  public void setFicouEmObservacaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FICOUEMOBSERVACAO_ISSET_ID, value);
  }

  public int getNasfsSize() {
    return (this.nasfs == null) ? 0 : this.nasfs.size();
  }

  public java.util.Iterator<Long> getNasfsIterator() {
    return (this.nasfs == null) ? null : this.nasfs.iterator();
  }

  public void addToNasfs(long elem) {
    if (this.nasfs == null) {
      this.nasfs = new ArrayList<Long>();
    }
    this.nasfs.add(elem);
  }

  public List<Long> getNasfs() {
    return this.nasfs;
  }

  public void setNasfs(List<Long> nasfs) {
    this.nasfs = nasfs;
  }

  public void unsetNasfs() {
    this.nasfs = null;
  }

  /** Returns true if field nasfs is set (has been assigned a value) and false otherwise */
  public boolean isSetNasfs() {
    return this.nasfs != null;
  }

  public void setNasfsIsSet(boolean value) {
    if (!value) {
      this.nasfs = null;
    }
  }

  public int getCondutasSize() {
    return (this.condutas == null) ? 0 : this.condutas.size();
  }

  public java.util.Iterator<Long> getCondutasIterator() {
    return (this.condutas == null) ? null : this.condutas.iterator();
  }

  public void addToCondutas(long elem) {
    if (this.condutas == null) {
      this.condutas = new ArrayList<Long>();
    }
    this.condutas.add(elem);
  }

  public List<Long> getCondutas() {
    return this.condutas;
  }

  public void setCondutas(List<Long> condutas) {
    this.condutas = condutas;
  }

  public void unsetCondutas() {
    this.condutas = null;
  }

  /** Returns true if field condutas is set (has been assigned a value) and false otherwise */
  public boolean isSetCondutas() {
    return this.condutas != null;
  }

  public void setCondutasIsSet(boolean value) {
    if (!value) {
      this.condutas = null;
    }
  }

  public boolean isStGravidezPlanejada() {
    return this.stGravidezPlanejada;
  }

  public void setStGravidezPlanejada(boolean stGravidezPlanejada) {
    this.stGravidezPlanejada = stGravidezPlanejada;
    setStGravidezPlanejadaIsSet(true);
  }

  public void unsetStGravidezPlanejada() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID);
  }

  /** Returns true if field stGravidezPlanejada is set (has been assigned a value) and false otherwise */
  public boolean isSetStGravidezPlanejada() {
    return EncodingUtils.testBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID);
  }

  public void setStGravidezPlanejadaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STGRAVIDEZPLANEJADA_ISSET_ID, value);
  }

  public int getNuGestasPrevias() {
    return this.nuGestasPrevias;
  }

  public void setNuGestasPrevias(int nuGestasPrevias) {
    this.nuGestasPrevias = nuGestasPrevias;
    setNuGestasPreviasIsSet(true);
  }

  public void unsetNuGestasPrevias() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID);
  }

  /** Returns true if field nuGestasPrevias is set (has been assigned a value) and false otherwise */
  public boolean isSetNuGestasPrevias() {
    return EncodingUtils.testBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID);
  }

  public void setNuGestasPreviasIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUGESTASPREVIAS_ISSET_ID, value);
  }

  public int getNuPartos() {
    return this.nuPartos;
  }

  public void setNuPartos(int nuPartos) {
    this.nuPartos = nuPartos;
    setNuPartosIsSet(true);
  }

  public void unsetNuPartos() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUPARTOS_ISSET_ID);
  }

  /** Returns true if field nuPartos is set (has been assigned a value) and false otherwise */
  public boolean isSetNuPartos() {
    return EncodingUtils.testBit(__isset_bitfield, __NUPARTOS_ISSET_ID);
  }

  public void setNuPartosIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUPARTOS_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NUMERO_PRONTUARIO:
      if (value == null) {
        unsetNumeroProntuario();
      } else {
        setNumeroProntuario((String)value);
      }
      break;

    case CNS:
      if (value == null) {
        unsetCns();
      } else {
        setCns((String)value);
      }
      break;

    case DATA_NASCIMENTO:
      if (value == null) {
        unsetDataNascimento();
      } else {
        setDataNascimento((Long)value);
      }
      break;

    case LOCAL_DE_ATENDIMENTO:
      if (value == null) {
        unsetLocalDeAtendimento();
      } else {
        setLocalDeAtendimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case TIPO_ATENDIMENTO:
      if (value == null) {
        unsetTipoAtendimento();
      } else {
        setTipoAtendimento((Long)value);
      }
      break;

    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      if (value == null) {
        unsetPesoAcompanhamentoNutricional();
      } else {
        setPesoAcompanhamentoNutricional((Double)value);
      }
      break;

    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      if (value == null) {
        unsetAlturaAcompanhamentoNutricional();
      } else {
        setAlturaAcompanhamentoNutricional((Double)value);
      }
      break;

    case ALEITAMENTO_MATERNO:
      if (value == null) {
        unsetAleitamentoMaterno();
      } else {
        setAleitamentoMaterno((Long)value);
      }
      break;

    case DUM_DA_GESTANTE:
      if (value == null) {
        unsetDumDaGestante();
      } else {
        setDumDaGestante((Long)value);
      }
      break;

    case IDADE_GESTACIONAL:
      if (value == null) {
        unsetIdadeGestacional();
      } else {
        setIdadeGestacional((Integer)value);
      }
      break;

    case ATENCAO_DOMICILIAR_MODALIDADE:
      if (value == null) {
        unsetAtencaoDomiciliarModalidade();
      } else {
        setAtencaoDomiciliarModalidade((Long)value);
      }
      break;

    case PROBLEMA_CONDICAO_AVALIADA:
      if (value == null) {
        unsetProblemaCondicaoAvaliada();
      } else {
        setProblemaCondicaoAvaliada((ProblemaCondicaoAvaliacaoAIThrift)value);
      }
      break;

    case EXAMES_SOLICITADOS:
      if (value == null) {
        unsetExamesSolicitados();
      } else {
        setExamesSolicitados((List<String>)value);
      }
      break;

    case EXAMES_AVALIADOS:
      if (value == null) {
        unsetExamesAvaliados();
      } else {
        setExamesAvaliados((List<String>)value);
      }
      break;

    case OUTROS_SIA:
      if (value == null) {
        unsetOutrosSia();
      } else {
        setOutrosSia((List<OutrosSiaThrift>)value);
      }
      break;

    case VACINA_EM_DIA:
      if (value == null) {
        unsetVacinaEmDia();
      } else {
        setVacinaEmDia((Boolean)value);
      }
      break;

    case PIC:
      if (value == null) {
        unsetPic();
      } else {
        setPic((Long)value);
      }
      break;

    case FICOU_EM_OBSERVACAO:
      if (value == null) {
        unsetFicouEmObservacao();
      } else {
        setFicouEmObservacao((Boolean)value);
      }
      break;

    case NASFS:
      if (value == null) {
        unsetNasfs();
      } else {
        setNasfs((List<Long>)value);
      }
      break;

    case CONDUTAS:
      if (value == null) {
        unsetCondutas();
      } else {
        setCondutas((List<Long>)value);
      }
      break;

    case ST_GRAVIDEZ_PLANEJADA:
      if (value == null) {
        unsetStGravidezPlanejada();
      } else {
        setStGravidezPlanejada((Boolean)value);
      }
      break;

    case NU_GESTAS_PREVIAS:
      if (value == null) {
        unsetNuGestasPrevias();
      } else {
        setNuGestasPrevias((Integer)value);
      }
      break;

    case NU_PARTOS:
      if (value == null) {
        unsetNuPartos();
      } else {
        setNuPartos((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NUMERO_PRONTUARIO:
      return getNumeroProntuario();

    case CNS:
      return getCns();

    case DATA_NASCIMENTO:
      return Long.valueOf(getDataNascimento());

    case LOCAL_DE_ATENDIMENTO:
      return Long.valueOf(getLocalDeAtendimento());

    case SEXO:
      return Long.valueOf(getSexo());

    case TURNO:
      return Long.valueOf(getTurno());

    case TIPO_ATENDIMENTO:
      return Long.valueOf(getTipoAtendimento());

    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      return Double.valueOf(getPesoAcompanhamentoNutricional());

    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      return Double.valueOf(getAlturaAcompanhamentoNutricional());

    case ALEITAMENTO_MATERNO:
      return Long.valueOf(getAleitamentoMaterno());

    case DUM_DA_GESTANTE:
      return Long.valueOf(getDumDaGestante());

    case IDADE_GESTACIONAL:
      return Integer.valueOf(getIdadeGestacional());

    case ATENCAO_DOMICILIAR_MODALIDADE:
      return Long.valueOf(getAtencaoDomiciliarModalidade());

    case PROBLEMA_CONDICAO_AVALIADA:
      return getProblemaCondicaoAvaliada();

    case EXAMES_SOLICITADOS:
      return getExamesSolicitados();

    case EXAMES_AVALIADOS:
      return getExamesAvaliados();

    case OUTROS_SIA:
      return getOutrosSia();

    case VACINA_EM_DIA:
      return Boolean.valueOf(isVacinaEmDia());

    case PIC:
      return Long.valueOf(getPic());

    case FICOU_EM_OBSERVACAO:
      return Boolean.valueOf(isFicouEmObservacao());

    case NASFS:
      return getNasfs();

    case CONDUTAS:
      return getCondutas();

    case ST_GRAVIDEZ_PLANEJADA:
      return Boolean.valueOf(isStGravidezPlanejada());

    case NU_GESTAS_PREVIAS:
      return Integer.valueOf(getNuGestasPrevias());

    case NU_PARTOS:
      return Integer.valueOf(getNuPartos());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NUMERO_PRONTUARIO:
      return isSetNumeroProntuario();
    case CNS:
      return isSetCns();
    case DATA_NASCIMENTO:
      return isSetDataNascimento();
    case LOCAL_DE_ATENDIMENTO:
      return isSetLocalDeAtendimento();
    case SEXO:
      return isSetSexo();
    case TURNO:
      return isSetTurno();
    case TIPO_ATENDIMENTO:
      return isSetTipoAtendimento();
    case PESO_ACOMPANHAMENTO_NUTRICIONAL:
      return isSetPesoAcompanhamentoNutricional();
    case ALTURA_ACOMPANHAMENTO_NUTRICIONAL:
      return isSetAlturaAcompanhamentoNutricional();
    case ALEITAMENTO_MATERNO:
      return isSetAleitamentoMaterno();
    case DUM_DA_GESTANTE:
      return isSetDumDaGestante();
    case IDADE_GESTACIONAL:
      return isSetIdadeGestacional();
    case ATENCAO_DOMICILIAR_MODALIDADE:
      return isSetAtencaoDomiciliarModalidade();
    case PROBLEMA_CONDICAO_AVALIADA:
      return isSetProblemaCondicaoAvaliada();
    case EXAMES_SOLICITADOS:
      return isSetExamesSolicitados();
    case EXAMES_AVALIADOS:
      return isSetExamesAvaliados();
    case OUTROS_SIA:
      return isSetOutrosSia();
    case VACINA_EM_DIA:
      return isSetVacinaEmDia();
    case PIC:
      return isSetPic();
    case FICOU_EM_OBSERVACAO:
      return isSetFicouEmObservacao();
    case NASFS:
      return isSetNasfs();
    case CONDUTAS:
      return isSetCondutas();
    case ST_GRAVIDEZ_PLANEJADA:
      return isSetStGravidezPlanejada();
    case NU_GESTAS_PREVIAS:
      return isSetNuGestasPrevias();
    case NU_PARTOS:
      return isSetNuPartos();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAtendimentoIndividualChildThrift)
      return this.equals((FichaAtendimentoIndividualChildThrift)that);
    return false;
  }

  public boolean equals(FichaAtendimentoIndividualChildThrift that) {
    if (that == null)
      return false;

    boolean this_present_numeroProntuario = true && this.isSetNumeroProntuario();
    boolean that_present_numeroProntuario = true && that.isSetNumeroProntuario();
    if (this_present_numeroProntuario || that_present_numeroProntuario) {
      if (!(this_present_numeroProntuario && that_present_numeroProntuario))
        return false;
      if (!this.numeroProntuario.equals(that.numeroProntuario))
        return false;
    }

    boolean this_present_cns = true && this.isSetCns();
    boolean that_present_cns = true && that.isSetCns();
    if (this_present_cns || that_present_cns) {
      if (!(this_present_cns && that_present_cns))
        return false;
      if (!this.cns.equals(that.cns))
        return false;
    }

    boolean this_present_dataNascimento = true && this.isSetDataNascimento();
    boolean that_present_dataNascimento = true && that.isSetDataNascimento();
    if (this_present_dataNascimento || that_present_dataNascimento) {
      if (!(this_present_dataNascimento && that_present_dataNascimento))
        return false;
      if (this.dataNascimento != that.dataNascimento)
        return false;
    }

    boolean this_present_localDeAtendimento = true && this.isSetLocalDeAtendimento();
    boolean that_present_localDeAtendimento = true && that.isSetLocalDeAtendimento();
    if (this_present_localDeAtendimento || that_present_localDeAtendimento) {
      if (!(this_present_localDeAtendimento && that_present_localDeAtendimento))
        return false;
      if (this.localDeAtendimento != that.localDeAtendimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_tipoAtendimento = true && this.isSetTipoAtendimento();
    boolean that_present_tipoAtendimento = true && that.isSetTipoAtendimento();
    if (this_present_tipoAtendimento || that_present_tipoAtendimento) {
      if (!(this_present_tipoAtendimento && that_present_tipoAtendimento))
        return false;
      if (this.tipoAtendimento != that.tipoAtendimento)
        return false;
    }

    boolean this_present_pesoAcompanhamentoNutricional = true && this.isSetPesoAcompanhamentoNutricional();
    boolean that_present_pesoAcompanhamentoNutricional = true && that.isSetPesoAcompanhamentoNutricional();
    if (this_present_pesoAcompanhamentoNutricional || that_present_pesoAcompanhamentoNutricional) {
      if (!(this_present_pesoAcompanhamentoNutricional && that_present_pesoAcompanhamentoNutricional))
        return false;
      if (this.pesoAcompanhamentoNutricional != that.pesoAcompanhamentoNutricional)
        return false;
    }

    boolean this_present_alturaAcompanhamentoNutricional = true && this.isSetAlturaAcompanhamentoNutricional();
    boolean that_present_alturaAcompanhamentoNutricional = true && that.isSetAlturaAcompanhamentoNutricional();
    if (this_present_alturaAcompanhamentoNutricional || that_present_alturaAcompanhamentoNutricional) {
      if (!(this_present_alturaAcompanhamentoNutricional && that_present_alturaAcompanhamentoNutricional))
        return false;
      if (this.alturaAcompanhamentoNutricional != that.alturaAcompanhamentoNutricional)
        return false;
    }

    boolean this_present_aleitamentoMaterno = true && this.isSetAleitamentoMaterno();
    boolean that_present_aleitamentoMaterno = true && that.isSetAleitamentoMaterno();
    if (this_present_aleitamentoMaterno || that_present_aleitamentoMaterno) {
      if (!(this_present_aleitamentoMaterno && that_present_aleitamentoMaterno))
        return false;
      if (this.aleitamentoMaterno != that.aleitamentoMaterno)
        return false;
    }

    boolean this_present_dumDaGestante = true && this.isSetDumDaGestante();
    boolean that_present_dumDaGestante = true && that.isSetDumDaGestante();
    if (this_present_dumDaGestante || that_present_dumDaGestante) {
      if (!(this_present_dumDaGestante && that_present_dumDaGestante))
        return false;
      if (this.dumDaGestante != that.dumDaGestante)
        return false;
    }

    boolean this_present_idadeGestacional = true && this.isSetIdadeGestacional();
    boolean that_present_idadeGestacional = true && that.isSetIdadeGestacional();
    if (this_present_idadeGestacional || that_present_idadeGestacional) {
      if (!(this_present_idadeGestacional && that_present_idadeGestacional))
        return false;
      if (this.idadeGestacional != that.idadeGestacional)
        return false;
    }

    boolean this_present_atencaoDomiciliarModalidade = true && this.isSetAtencaoDomiciliarModalidade();
    boolean that_present_atencaoDomiciliarModalidade = true && that.isSetAtencaoDomiciliarModalidade();
    if (this_present_atencaoDomiciliarModalidade || that_present_atencaoDomiciliarModalidade) {
      if (!(this_present_atencaoDomiciliarModalidade && that_present_atencaoDomiciliarModalidade))
        return false;
      if (this.atencaoDomiciliarModalidade != that.atencaoDomiciliarModalidade)
        return false;
    }

    boolean this_present_problemaCondicaoAvaliada = true && this.isSetProblemaCondicaoAvaliada();
    boolean that_present_problemaCondicaoAvaliada = true && that.isSetProblemaCondicaoAvaliada();
    if (this_present_problemaCondicaoAvaliada || that_present_problemaCondicaoAvaliada) {
      if (!(this_present_problemaCondicaoAvaliada && that_present_problemaCondicaoAvaliada))
        return false;
      if (!this.problemaCondicaoAvaliada.equals(that.problemaCondicaoAvaliada))
        return false;
    }

    boolean this_present_examesSolicitados = true && this.isSetExamesSolicitados();
    boolean that_present_examesSolicitados = true && that.isSetExamesSolicitados();
    if (this_present_examesSolicitados || that_present_examesSolicitados) {
      if (!(this_present_examesSolicitados && that_present_examesSolicitados))
        return false;
      if (!this.examesSolicitados.equals(that.examesSolicitados))
        return false;
    }

    boolean this_present_examesAvaliados = true && this.isSetExamesAvaliados();
    boolean that_present_examesAvaliados = true && that.isSetExamesAvaliados();
    if (this_present_examesAvaliados || that_present_examesAvaliados) {
      if (!(this_present_examesAvaliados && that_present_examesAvaliados))
        return false;
      if (!this.examesAvaliados.equals(that.examesAvaliados))
        return false;
    }

    boolean this_present_outrosSia = true && this.isSetOutrosSia();
    boolean that_present_outrosSia = true && that.isSetOutrosSia();
    if (this_present_outrosSia || that_present_outrosSia) {
      if (!(this_present_outrosSia && that_present_outrosSia))
        return false;
      if (!this.outrosSia.equals(that.outrosSia))
        return false;
    }

    boolean this_present_vacinaEmDia = true && this.isSetVacinaEmDia();
    boolean that_present_vacinaEmDia = true && that.isSetVacinaEmDia();
    if (this_present_vacinaEmDia || that_present_vacinaEmDia) {
      if (!(this_present_vacinaEmDia && that_present_vacinaEmDia))
        return false;
      if (this.vacinaEmDia != that.vacinaEmDia)
        return false;
    }

    boolean this_present_pic = true && this.isSetPic();
    boolean that_present_pic = true && that.isSetPic();
    if (this_present_pic || that_present_pic) {
      if (!(this_present_pic && that_present_pic))
        return false;
      if (this.pic != that.pic)
        return false;
    }

    boolean this_present_ficouEmObservacao = true && this.isSetFicouEmObservacao();
    boolean that_present_ficouEmObservacao = true && that.isSetFicouEmObservacao();
    if (this_present_ficouEmObservacao || that_present_ficouEmObservacao) {
      if (!(this_present_ficouEmObservacao && that_present_ficouEmObservacao))
        return false;
      if (this.ficouEmObservacao != that.ficouEmObservacao)
        return false;
    }

    boolean this_present_nasfs = true && this.isSetNasfs();
    boolean that_present_nasfs = true && that.isSetNasfs();
    if (this_present_nasfs || that_present_nasfs) {
      if (!(this_present_nasfs && that_present_nasfs))
        return false;
      if (!this.nasfs.equals(that.nasfs))
        return false;
    }

    boolean this_present_condutas = true && this.isSetCondutas();
    boolean that_present_condutas = true && that.isSetCondutas();
    if (this_present_condutas || that_present_condutas) {
      if (!(this_present_condutas && that_present_condutas))
        return false;
      if (!this.condutas.equals(that.condutas))
        return false;
    }

    boolean this_present_stGravidezPlanejada = true && this.isSetStGravidezPlanejada();
    boolean that_present_stGravidezPlanejada = true && that.isSetStGravidezPlanejada();
    if (this_present_stGravidezPlanejada || that_present_stGravidezPlanejada) {
      if (!(this_present_stGravidezPlanejada && that_present_stGravidezPlanejada))
        return false;
      if (this.stGravidezPlanejada != that.stGravidezPlanejada)
        return false;
    }

    boolean this_present_nuGestasPrevias = true && this.isSetNuGestasPrevias();
    boolean that_present_nuGestasPrevias = true && that.isSetNuGestasPrevias();
    if (this_present_nuGestasPrevias || that_present_nuGestasPrevias) {
      if (!(this_present_nuGestasPrevias && that_present_nuGestasPrevias))
        return false;
      if (this.nuGestasPrevias != that.nuGestasPrevias)
        return false;
    }

    boolean this_present_nuPartos = true && this.isSetNuPartos();
    boolean that_present_nuPartos = true && that.isSetNuPartos();
    if (this_present_nuPartos || that_present_nuPartos) {
      if (!(this_present_nuPartos && that_present_nuPartos))
        return false;
      if (this.nuPartos != that.nuPartos)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(FichaAtendimentoIndividualChildThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    FichaAtendimentoIndividualChildThrift typedOther = (FichaAtendimentoIndividualChildThrift)other;

    lastComparison = Boolean.valueOf(isSetNumeroProntuario()).compareTo(typedOther.isSetNumeroProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroProntuario, typedOther.numeroProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCns()).compareTo(typedOther.isSetCns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cns, typedOther.cns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimento()).compareTo(typedOther.isSetDataNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimento, typedOther.dataNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalDeAtendimento()).compareTo(typedOther.isSetLocalDeAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalDeAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localDeAtendimento, typedOther.localDeAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(typedOther.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, typedOther.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(typedOther.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, typedOther.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoAtendimento()).compareTo(typedOther.isSetTipoAtendimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoAtendimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoAtendimento, typedOther.tipoAtendimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPesoAcompanhamentoNutricional()).compareTo(typedOther.isSetPesoAcompanhamentoNutricional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPesoAcompanhamentoNutricional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pesoAcompanhamentoNutricional, typedOther.pesoAcompanhamentoNutricional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAlturaAcompanhamentoNutricional()).compareTo(typedOther.isSetAlturaAcompanhamentoNutricional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAlturaAcompanhamentoNutricional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.alturaAcompanhamentoNutricional, typedOther.alturaAcompanhamentoNutricional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAleitamentoMaterno()).compareTo(typedOther.isSetAleitamentoMaterno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAleitamentoMaterno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aleitamentoMaterno, typedOther.aleitamentoMaterno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDumDaGestante()).compareTo(typedOther.isSetDumDaGestante());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDumDaGestante()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dumDaGestante, typedOther.dumDaGestante);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdadeGestacional()).compareTo(typedOther.isSetIdadeGestacional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdadeGestacional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idadeGestacional, typedOther.idadeGestacional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarModalidade()).compareTo(typedOther.isSetAtencaoDomiciliarModalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarModalidade, typedOther.atencaoDomiciliarModalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProblemaCondicaoAvaliada()).compareTo(typedOther.isSetProblemaCondicaoAvaliada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProblemaCondicaoAvaliada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.problemaCondicaoAvaliada, typedOther.problemaCondicaoAvaliada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExamesSolicitados()).compareTo(typedOther.isSetExamesSolicitados());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExamesSolicitados()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.examesSolicitados, typedOther.examesSolicitados);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExamesAvaliados()).compareTo(typedOther.isSetExamesAvaliados());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExamesAvaliados()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.examesAvaliados, typedOther.examesAvaliados);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOutrosSia()).compareTo(typedOther.isSetOutrosSia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOutrosSia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.outrosSia, typedOther.outrosSia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVacinaEmDia()).compareTo(typedOther.isSetVacinaEmDia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVacinaEmDia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vacinaEmDia, typedOther.vacinaEmDia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPic()).compareTo(typedOther.isSetPic());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPic()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pic, typedOther.pic);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFicouEmObservacao()).compareTo(typedOther.isSetFicouEmObservacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFicouEmObservacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ficouEmObservacao, typedOther.ficouEmObservacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNasfs()).compareTo(typedOther.isSetNasfs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNasfs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nasfs, typedOther.nasfs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondutas()).compareTo(typedOther.isSetCondutas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondutas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condutas, typedOther.condutas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStGravidezPlanejada()).compareTo(typedOther.isSetStGravidezPlanejada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStGravidezPlanejada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stGravidezPlanejada, typedOther.stGravidezPlanejada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuGestasPrevias()).compareTo(typedOther.isSetNuGestasPrevias());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuGestasPrevias()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuGestasPrevias, typedOther.nuGestasPrevias);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNuPartos()).compareTo(typedOther.isSetNuPartos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNuPartos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nuPartos, typedOther.nuPartos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAtendimentoIndividualChildThrift(");
    boolean first = true;

    if (isSetNumeroProntuario()) {
      sb.append("numeroProntuario:");
      if (this.numeroProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroProntuario);
      }
      first = false;
    }
    if (isSetCns()) {
      if (!first) sb.append(", ");
      sb.append("cns:");
      if (this.cns == null) {
        sb.append("null");
      } else {
        sb.append(this.cns);
      }
      first = false;
    }
    if (isSetDataNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimento:");
      sb.append(this.dataNascimento);
      first = false;
    }
    if (isSetLocalDeAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("localDeAtendimento:");
      sb.append(this.localDeAtendimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetTurno()) {
      if (!first) sb.append(", ");
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetTipoAtendimento()) {
      if (!first) sb.append(", ");
      sb.append("tipoAtendimento:");
      sb.append(this.tipoAtendimento);
      first = false;
    }
    if (isSetPesoAcompanhamentoNutricional()) {
      if (!first) sb.append(", ");
      sb.append("pesoAcompanhamentoNutricional:");
      sb.append(this.pesoAcompanhamentoNutricional);
      first = false;
    }
    if (isSetAlturaAcompanhamentoNutricional()) {
      if (!first) sb.append(", ");
      sb.append("alturaAcompanhamentoNutricional:");
      sb.append(this.alturaAcompanhamentoNutricional);
      first = false;
    }
    if (isSetAleitamentoMaterno()) {
      if (!first) sb.append(", ");
      sb.append("aleitamentoMaterno:");
      sb.append(this.aleitamentoMaterno);
      first = false;
    }
    if (isSetDumDaGestante()) {
      if (!first) sb.append(", ");
      sb.append("dumDaGestante:");
      sb.append(this.dumDaGestante);
      first = false;
    }
    if (isSetIdadeGestacional()) {
      if (!first) sb.append(", ");
      sb.append("idadeGestacional:");
      sb.append(this.idadeGestacional);
      first = false;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarModalidade:");
      sb.append(this.atencaoDomiciliarModalidade);
      first = false;
    }
    if (isSetProblemaCondicaoAvaliada()) {
      if (!first) sb.append(", ");
      sb.append("problemaCondicaoAvaliada:");
      if (this.problemaCondicaoAvaliada == null) {
        sb.append("null");
      } else {
        sb.append(this.problemaCondicaoAvaliada);
      }
      first = false;
    }
    if (isSetExamesSolicitados()) {
      if (!first) sb.append(", ");
      sb.append("examesSolicitados:");
      if (this.examesSolicitados == null) {
        sb.append("null");
      } else {
        sb.append(this.examesSolicitados);
      }
      first = false;
    }
    if (isSetExamesAvaliados()) {
      if (!first) sb.append(", ");
      sb.append("examesAvaliados:");
      if (this.examesAvaliados == null) {
        sb.append("null");
      } else {
        sb.append(this.examesAvaliados);
      }
      first = false;
    }
    if (isSetOutrosSia()) {
      if (!first) sb.append(", ");
      sb.append("outrosSia:");
      if (this.outrosSia == null) {
        sb.append("null");
      } else {
        sb.append(this.outrosSia);
      }
      first = false;
    }
    if (isSetVacinaEmDia()) {
      if (!first) sb.append(", ");
      sb.append("vacinaEmDia:");
      sb.append(this.vacinaEmDia);
      first = false;
    }
    if (isSetPic()) {
      if (!first) sb.append(", ");
      sb.append("pic:");
      sb.append(this.pic);
      first = false;
    }
    if (isSetFicouEmObservacao()) {
      if (!first) sb.append(", ");
      sb.append("ficouEmObservacao:");
      sb.append(this.ficouEmObservacao);
      first = false;
    }
    if (isSetNasfs()) {
      if (!first) sb.append(", ");
      sb.append("nasfs:");
      if (this.nasfs == null) {
        sb.append("null");
      } else {
        sb.append(this.nasfs);
      }
      first = false;
    }
    if (isSetCondutas()) {
      if (!first) sb.append(", ");
      sb.append("condutas:");
      if (this.condutas == null) {
        sb.append("null");
      } else {
        sb.append(this.condutas);
      }
      first = false;
    }
    if (isSetStGravidezPlanejada()) {
      if (!first) sb.append(", ");
      sb.append("stGravidezPlanejada:");
      sb.append(this.stGravidezPlanejada);
      first = false;
    }
    if (isSetNuGestasPrevias()) {
      if (!first) sb.append(", ");
      sb.append("nuGestasPrevias:");
      sb.append(this.nuGestasPrevias);
      first = false;
    }
    if (isSetNuPartos()) {
      if (!first) sb.append(", ");
      sb.append("nuPartos:");
      sb.append(this.nuPartos);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (problemaCondicaoAvaliada != null) {
      problemaCondicaoAvaliada.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAtendimentoIndividualChildThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAtendimentoIndividualChildThriftStandardScheme getScheme() {
      return new FichaAtendimentoIndividualChildThriftStandardScheme();
    }
  }

  private static class FichaAtendimentoIndividualChildThriftStandardScheme extends StandardScheme<FichaAtendimentoIndividualChildThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NUMERO_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroProntuario = iprot.readString();
              struct.setNumeroProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CNS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cns = iprot.readString();
              struct.setCnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATA_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimento = iprot.readI64();
              struct.setDataNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOCAL_DE_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.localDeAtendimento = iprot.readI64();
              struct.setLocalDeAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TIPO_ATENDIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.tipoAtendimento = iprot.readI64();
              struct.setTipoAtendimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PESO_ACOMPANHAMENTO_NUTRICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.pesoAcompanhamentoNutricional = iprot.readDouble();
              struct.setPesoAcompanhamentoNutricionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ALTURA_ACOMPANHAMENTO_NUTRICIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.alturaAcompanhamentoNutricional = iprot.readDouble();
              struct.setAlturaAcompanhamentoNutricionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ALEITAMENTO_MATERNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.aleitamentoMaterno = iprot.readI64();
              struct.setAleitamentoMaternoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DUM_DA_GESTANTE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dumDaGestante = iprot.readI64();
              struct.setDumDaGestanteIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IDADE_GESTACIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idadeGestacional = iprot.readI32();
              struct.setIdadeGestacionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // ATENCAO_DOMICILIAR_MODALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarModalidade = iprot.readI64();
              struct.setAtencaoDomiciliarModalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PROBLEMA_CONDICAO_AVALIADA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift();
              struct.problemaCondicaoAvaliada.read(iprot);
              struct.setProblemaCondicaoAvaliadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // EXAMES_SOLICITADOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list16 = iprot.readListBegin();
                struct.examesSolicitados = new ArrayList<String>(_list16.size);
                for (int _i17 = 0; _i17 < _list16.size; ++_i17)
                {
                  String _elem18; // required
                  _elem18 = iprot.readString();
                  struct.examesSolicitados.add(_elem18);
                }
                iprot.readListEnd();
              }
              struct.setExamesSolicitadosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // EXAMES_AVALIADOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list19 = iprot.readListBegin();
                struct.examesAvaliados = new ArrayList<String>(_list19.size);
                for (int _i20 = 0; _i20 < _list19.size; ++_i20)
                {
                  String _elem21; // required
                  _elem21 = iprot.readString();
                  struct.examesAvaliados.add(_elem21);
                }
                iprot.readListEnd();
              }
              struct.setExamesAvaliadosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // OUTROS_SIA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list22 = iprot.readListBegin();
                struct.outrosSia = new ArrayList<OutrosSiaThrift>(_list22.size);
                for (int _i23 = 0; _i23 < _list22.size; ++_i23)
                {
                  OutrosSiaThrift _elem24; // required
                  _elem24 = new OutrosSiaThrift();
                  _elem24.read(iprot);
                  struct.outrosSia.add(_elem24);
                }
                iprot.readListEnd();
              }
              struct.setOutrosSiaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // VACINA_EM_DIA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.vacinaEmDia = iprot.readBool();
              struct.setVacinaEmDiaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PIC
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.pic = iprot.readI64();
              struct.setPicIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // FICOU_EM_OBSERVACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.ficouEmObservacao = iprot.readBool();
              struct.setFicouEmObservacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // NASFS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list25 = iprot.readListBegin();
                struct.nasfs = new ArrayList<Long>(_list25.size);
                for (int _i26 = 0; _i26 < _list25.size; ++_i26)
                {
                  long _elem27; // required
                  _elem27 = iprot.readI64();
                  struct.nasfs.add(_elem27);
                }
                iprot.readListEnd();
              }
              struct.setNasfsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CONDUTAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list28 = iprot.readListBegin();
                struct.condutas = new ArrayList<Long>(_list28.size);
                for (int _i29 = 0; _i29 < _list28.size; ++_i29)
                {
                  long _elem30; // required
                  _elem30 = iprot.readI64();
                  struct.condutas.add(_elem30);
                }
                iprot.readListEnd();
              }
              struct.setCondutasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // ST_GRAVIDEZ_PLANEJADA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stGravidezPlanejada = iprot.readBool();
              struct.setStGravidezPlanejadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // NU_GESTAS_PREVIAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nuGestasPrevias = iprot.readI32();
              struct.setNuGestasPreviasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // NU_PARTOS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.nuPartos = iprot.readI32();
              struct.setNuPartosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.numeroProntuario != null) {
        if (struct.isSetNumeroProntuario()) {
          oprot.writeFieldBegin(NUMERO_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numeroProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cns != null) {
        if (struct.isSetCns()) {
          oprot.writeFieldBegin(CNS_FIELD_DESC);
          oprot.writeString(struct.cns);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLocalDeAtendimento()) {
        oprot.writeFieldBegin(LOCAL_DE_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.localDeAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeFieldBegin(TIPO_ATENDIMENTO_FIELD_DESC);
        oprot.writeI64(struct.tipoAtendimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        oprot.writeFieldBegin(PESO_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC);
        oprot.writeDouble(struct.pesoAcompanhamentoNutricional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        oprot.writeFieldBegin(ALTURA_ACOMPANHAMENTO_NUTRICIONAL_FIELD_DESC);
        oprot.writeDouble(struct.alturaAcompanhamentoNutricional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAleitamentoMaterno()) {
        oprot.writeFieldBegin(ALEITAMENTO_MATERNO_FIELD_DESC);
        oprot.writeI64(struct.aleitamentoMaterno);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDumDaGestante()) {
        oprot.writeFieldBegin(DUM_DA_GESTANTE_FIELD_DESC);
        oprot.writeI64(struct.dumDaGestante);
        oprot.writeFieldEnd();
      }
      if (struct.isSetIdadeGestacional()) {
        oprot.writeFieldBegin(IDADE_GESTACIONAL_FIELD_DESC);
        oprot.writeI32(struct.idadeGestacional);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
        oprot.writeFieldEnd();
      }
      if (struct.problemaCondicaoAvaliada != null) {
        if (struct.isSetProblemaCondicaoAvaliada()) {
          oprot.writeFieldBegin(PROBLEMA_CONDICAO_AVALIADA_FIELD_DESC);
          struct.problemaCondicaoAvaliada.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.examesSolicitados != null) {
        if (struct.isSetExamesSolicitados()) {
          oprot.writeFieldBegin(EXAMES_SOLICITADOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.examesSolicitados.size()));
            for (String _iter31 : struct.examesSolicitados)
            {
              oprot.writeString(_iter31);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.examesAvaliados != null) {
        if (struct.isSetExamesAvaliados()) {
          oprot.writeFieldBegin(EXAMES_AVALIADOS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.examesAvaliados.size()));
            for (String _iter32 : struct.examesAvaliados)
            {
              oprot.writeString(_iter32);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.outrosSia != null) {
        if (struct.isSetOutrosSia()) {
          oprot.writeFieldBegin(OUTROS_SIA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.outrosSia.size()));
            for (OutrosSiaThrift _iter33 : struct.outrosSia)
            {
              _iter33.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetVacinaEmDia()) {
        oprot.writeFieldBegin(VACINA_EM_DIA_FIELD_DESC);
        oprot.writeBool(struct.vacinaEmDia);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPic()) {
        oprot.writeFieldBegin(PIC_FIELD_DESC);
        oprot.writeI64(struct.pic);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFicouEmObservacao()) {
        oprot.writeFieldBegin(FICOU_EM_OBSERVACAO_FIELD_DESC);
        oprot.writeBool(struct.ficouEmObservacao);
        oprot.writeFieldEnd();
      }
      if (struct.nasfs != null) {
        if (struct.isSetNasfs()) {
          oprot.writeFieldBegin(NASFS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.nasfs.size()));
            for (long _iter34 : struct.nasfs)
            {
              oprot.writeI64(_iter34);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.condutas != null) {
        if (struct.isSetCondutas()) {
          oprot.writeFieldBegin(CONDUTAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.condutas.size()));
            for (long _iter35 : struct.condutas)
            {
              oprot.writeI64(_iter35);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStGravidezPlanejada()) {
        oprot.writeFieldBegin(ST_GRAVIDEZ_PLANEJADA_FIELD_DESC);
        oprot.writeBool(struct.stGravidezPlanejada);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNuGestasPrevias()) {
        oprot.writeFieldBegin(NU_GESTAS_PREVIAS_FIELD_DESC);
        oprot.writeI32(struct.nuGestasPrevias);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNuPartos()) {
        oprot.writeFieldBegin(NU_PARTOS_FIELD_DESC);
        oprot.writeI32(struct.nuPartos);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAtendimentoIndividualChildThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAtendimentoIndividualChildThriftTupleScheme getScheme() {
      return new FichaAtendimentoIndividualChildThriftTupleScheme();
    }
  }

  private static class FichaAtendimentoIndividualChildThriftTupleScheme extends TupleScheme<FichaAtendimentoIndividualChildThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetNumeroProntuario()) {
        optionals.set(0);
      }
      if (struct.isSetCns()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimento()) {
        optionals.set(2);
      }
      if (struct.isSetLocalDeAtendimento()) {
        optionals.set(3);
      }
      if (struct.isSetSexo()) {
        optionals.set(4);
      }
      if (struct.isSetTurno()) {
        optionals.set(5);
      }
      if (struct.isSetTipoAtendimento()) {
        optionals.set(6);
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        optionals.set(7);
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        optionals.set(8);
      }
      if (struct.isSetAleitamentoMaterno()) {
        optionals.set(9);
      }
      if (struct.isSetDumDaGestante()) {
        optionals.set(10);
      }
      if (struct.isSetIdadeGestacional()) {
        optionals.set(11);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        optionals.set(12);
      }
      if (struct.isSetProblemaCondicaoAvaliada()) {
        optionals.set(13);
      }
      if (struct.isSetExamesSolicitados()) {
        optionals.set(14);
      }
      if (struct.isSetExamesAvaliados()) {
        optionals.set(15);
      }
      if (struct.isSetOutrosSia()) {
        optionals.set(16);
      }
      if (struct.isSetVacinaEmDia()) {
        optionals.set(17);
      }
      if (struct.isSetPic()) {
        optionals.set(18);
      }
      if (struct.isSetFicouEmObservacao()) {
        optionals.set(19);
      }
      if (struct.isSetNasfs()) {
        optionals.set(20);
      }
      if (struct.isSetCondutas()) {
        optionals.set(21);
      }
      if (struct.isSetStGravidezPlanejada()) {
        optionals.set(22);
      }
      if (struct.isSetNuGestasPrevias()) {
        optionals.set(23);
      }
      if (struct.isSetNuPartos()) {
        optionals.set(24);
      }
      oprot.writeBitSet(optionals, 25);
      if (struct.isSetNumeroProntuario()) {
        oprot.writeString(struct.numeroProntuario);
      }
      if (struct.isSetCns()) {
        oprot.writeString(struct.cns);
      }
      if (struct.isSetDataNascimento()) {
        oprot.writeI64(struct.dataNascimento);
      }
      if (struct.isSetLocalDeAtendimento()) {
        oprot.writeI64(struct.localDeAtendimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetTipoAtendimento()) {
        oprot.writeI64(struct.tipoAtendimento);
      }
      if (struct.isSetPesoAcompanhamentoNutricional()) {
        oprot.writeDouble(struct.pesoAcompanhamentoNutricional);
      }
      if (struct.isSetAlturaAcompanhamentoNutricional()) {
        oprot.writeDouble(struct.alturaAcompanhamentoNutricional);
      }
      if (struct.isSetAleitamentoMaterno()) {
        oprot.writeI64(struct.aleitamentoMaterno);
      }
      if (struct.isSetDumDaGestante()) {
        oprot.writeI64(struct.dumDaGestante);
      }
      if (struct.isSetIdadeGestacional()) {
        oprot.writeI32(struct.idadeGestacional);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
      }
      if (struct.isSetProblemaCondicaoAvaliada()) {
        struct.problemaCondicaoAvaliada.write(oprot);
      }
      if (struct.isSetExamesSolicitados()) {
        {
          oprot.writeI32(struct.examesSolicitados.size());
          for (String _iter36 : struct.examesSolicitados)
          {
            oprot.writeString(_iter36);
          }
        }
      }
      if (struct.isSetExamesAvaliados()) {
        {
          oprot.writeI32(struct.examesAvaliados.size());
          for (String _iter37 : struct.examesAvaliados)
          {
            oprot.writeString(_iter37);
          }
        }
      }
      if (struct.isSetOutrosSia()) {
        {
          oprot.writeI32(struct.outrosSia.size());
          for (OutrosSiaThrift _iter38 : struct.outrosSia)
          {
            _iter38.write(oprot);
          }
        }
      }
      if (struct.isSetVacinaEmDia()) {
        oprot.writeBool(struct.vacinaEmDia);
      }
      if (struct.isSetPic()) {
        oprot.writeI64(struct.pic);
      }
      if (struct.isSetFicouEmObservacao()) {
        oprot.writeBool(struct.ficouEmObservacao);
      }
      if (struct.isSetNasfs()) {
        {
          oprot.writeI32(struct.nasfs.size());
          for (long _iter39 : struct.nasfs)
          {
            oprot.writeI64(_iter39);
          }
        }
      }
      if (struct.isSetCondutas()) {
        {
          oprot.writeI32(struct.condutas.size());
          for (long _iter40 : struct.condutas)
          {
            oprot.writeI64(_iter40);
          }
        }
      }
      if (struct.isSetStGravidezPlanejada()) {
        oprot.writeBool(struct.stGravidezPlanejada);
      }
      if (struct.isSetNuGestasPrevias()) {
        oprot.writeI32(struct.nuGestasPrevias);
      }
      if (struct.isSetNuPartos()) {
        oprot.writeI32(struct.nuPartos);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAtendimentoIndividualChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(25);
      if (incoming.get(0)) {
        struct.numeroProntuario = iprot.readString();
        struct.setNumeroProntuarioIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cns = iprot.readString();
        struct.setCnsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimento = iprot.readI64();
        struct.setDataNascimentoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.localDeAtendimento = iprot.readI64();
        struct.setLocalDeAtendimentoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.tipoAtendimento = iprot.readI64();
        struct.setTipoAtendimentoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pesoAcompanhamentoNutricional = iprot.readDouble();
        struct.setPesoAcompanhamentoNutricionalIsSet(true);
      }
      if (incoming.get(8)) {
        struct.alturaAcompanhamentoNutricional = iprot.readDouble();
        struct.setAlturaAcompanhamentoNutricionalIsSet(true);
      }
      if (incoming.get(9)) {
        struct.aleitamentoMaterno = iprot.readI64();
        struct.setAleitamentoMaternoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.dumDaGestante = iprot.readI64();
        struct.setDumDaGestanteIsSet(true);
      }
      if (incoming.get(11)) {
        struct.idadeGestacional = iprot.readI32();
        struct.setIdadeGestacionalIsSet(true);
      }
      if (incoming.get(12)) {
        struct.atencaoDomiciliarModalidade = iprot.readI64();
        struct.setAtencaoDomiciliarModalidadeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.problemaCondicaoAvaliada = new ProblemaCondicaoAvaliacaoAIThrift();
        struct.problemaCondicaoAvaliada.read(iprot);
        struct.setProblemaCondicaoAvaliadaIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list41 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.examesSolicitados = new ArrayList<String>(_list41.size);
          for (int _i42 = 0; _i42 < _list41.size; ++_i42)
          {
            String _elem43; // required
            _elem43 = iprot.readString();
            struct.examesSolicitados.add(_elem43);
          }
        }
        struct.setExamesSolicitadosIsSet(true);
      }
      if (incoming.get(15)) {
        {
          org.apache.thrift.protocol.TList _list44 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.examesAvaliados = new ArrayList<String>(_list44.size);
          for (int _i45 = 0; _i45 < _list44.size; ++_i45)
          {
            String _elem46; // required
            _elem46 = iprot.readString();
            struct.examesAvaliados.add(_elem46);
          }
        }
        struct.setExamesAvaliadosIsSet(true);
      }
      if (incoming.get(16)) {
        {
          org.apache.thrift.protocol.TList _list47 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.outrosSia = new ArrayList<OutrosSiaThrift>(_list47.size);
          for (int _i48 = 0; _i48 < _list47.size; ++_i48)
          {
            OutrosSiaThrift _elem49; // required
            _elem49 = new OutrosSiaThrift();
            _elem49.read(iprot);
            struct.outrosSia.add(_elem49);
          }
        }
        struct.setOutrosSiaIsSet(true);
      }
      if (incoming.get(17)) {
        struct.vacinaEmDia = iprot.readBool();
        struct.setVacinaEmDiaIsSet(true);
      }
      if (incoming.get(18)) {
        struct.pic = iprot.readI64();
        struct.setPicIsSet(true);
      }
      if (incoming.get(19)) {
        struct.ficouEmObservacao = iprot.readBool();
        struct.setFicouEmObservacaoIsSet(true);
      }
      if (incoming.get(20)) {
        {
          org.apache.thrift.protocol.TList _list50 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.nasfs = new ArrayList<Long>(_list50.size);
          for (int _i51 = 0; _i51 < _list50.size; ++_i51)
          {
            long _elem52; // required
            _elem52 = iprot.readI64();
            struct.nasfs.add(_elem52);
          }
        }
        struct.setNasfsIsSet(true);
      }
      if (incoming.get(21)) {
        {
          org.apache.thrift.protocol.TList _list53 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.condutas = new ArrayList<Long>(_list53.size);
          for (int _i54 = 0; _i54 < _list53.size; ++_i54)
          {
            long _elem55; // required
            _elem55 = iprot.readI64();
            struct.condutas.add(_elem55);
          }
        }
        struct.setCondutasIsSet(true);
      }
      if (incoming.get(22)) {
        struct.stGravidezPlanejada = iprot.readBool();
        struct.setStGravidezPlanejadaIsSet(true);
      }
      if (incoming.get(23)) {
        struct.nuGestasPrevias = iprot.readI32();
        struct.setNuGestasPreviasIsSet(true);
      }
      if (incoming.get(24)) {
        struct.nuPartos = iprot.readI32();
        struct.setNuPartosIsSet(true);
      }
    }
  }

}

